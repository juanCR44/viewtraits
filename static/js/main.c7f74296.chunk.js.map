{"version":3,"sources":["utils/fetchholders.ts","MintCountdown.tsx","MintButton.tsx","constants/data.ts","constants/nftindex.ts","constants/dataafter.ts","constants/interfaces.ts","utils/NFTmetadata.ts","components/trait.tsx","Home.tsx","App.tsx","reportWebVitals.ts","index.tsx","utils.ts","connection.tsx","candy-machine.ts"],"names":["TOKEN_METADATA_PROGRAM","PublicKey","CANDY_MACHINE_V2_PROGRAM","getMintAddresses","firstCreatorAddress","connection","getProgramAccounts","dataSlice","offset","length","filters","dataSize","memcmp","bytes","toBase58","metadataAccounts","map","metadataAccountInfo","bs58","encode","account","data","getCandyMachineCreator","candyMachine","findProgramAddress","Buffer","from","toBuffer","useStyles","makeStyles","theme","createStyles","root","display","padding","spacing","margin","width","height","flexDirection","alignContent","alignItems","justifyContent","background","color","borderRadius","fontSize","done","marginBottom","fontWeight","item","MintCountdown","date","status","style","onComplete","classes","renderer","days","hours","minutes","seconds","completed","className","Paper","elevation","CTAButton","styled","Button","MintButton","onMint","isMinting","setIsMinting","isActive","wallet","useWallet","useConnection","useState","verified","setVerified","useGateway","requestGatewayToken","gatewayStatus","webSocketSubscriptionId","setWebSocketSubscriptionId","clicked","setClicked","useEffect","mint","removeAccountChangeListener","previousGatewayStatus","value","ref","useRef","current","usePrevious","fromStates","GatewayStatus","NOT_REQUESTED","REFRESH_TOKEN_REQUIRED","invalidToStates","UNKNOWN","find","state","console","log","disabled","onClick","gatekeeper","network","gatekeeperNetwork","ACTIVE","findGatewayToken","publicKey","gatewayToken","isValid","window","open","getGatewayTokenAddressForOwnerAndGatekeeperNetwork","gatewayTokenAddress","onGatewayTokenChange","Error","variant","isSoldOut","CircularProgress","isPresale","isWhitelistOnly","NFTINDEX","DATATRAIT","trait","traitCuantity","NFTRarityValueObj","getNFTRarity","index","dataTrait","attributes","toString","obj","x","trait_value","rarity","toFixed","BackgroundRarity","SkinRarity","EyesRarity","MouthRarity","SpecialRarity","HeadRarity","ClothingRarity","AccesoryRarity","WildFriendRarity","getNFTRScore","score","BackgroundScore","SkinScore","EyesScore","MouthScore","SpecialScore","HeadScore","ClothingScore","AccesoryScore","WildFriendScore","getNFTImage","mintData","name","image","prevIndex","Trait","props","setName","setImage","setAttributes","setPrevIndex","backgroundRarity","setBackgroundRarity","skinRarity","setSkinRarity","eyesRarity","setEyesRarity","mouthRarity","setMouthRarity","specialRarity","setSpecialRarity","headRarity","setHeadRarity","clothingRarity","setClothingRarity","accesoryRarity","setAccesoryRarity","wildFriendRarity","setWildFriendRarity","backgroundScore","setBackgroundScore","skinScore","setSkinScore","eyesScore","setEyesScore","mouthScore","setMouthScore","specialScore","setSpecialScore","headScore","setHeadScore","clothingScore","setClothingScore","accesoryScore","setAccesoryScore","wildFriendScore","setWildFriendScore","loadedData","setLoadedData","loadedRarity","setLoadedRarity","loadedScore","setLoadedScore","inputValue","setInputValue","poblateData","response","alert","poblateRarity","poblateScore","poblateGeneral","fetchData","src","alt","onChange","event","target","type","placeholder","parseInt","ConnectButton","WalletDialogButton","MintContainer","div","getCountdownDate","endSettings","endSettingType","toDate","number","goLiveDate","anchor","Date","getTime","undefined","Home","isUserMinting","setIsUserMinting","setCandyMachine","message","severity","alertState","setAlertState","setIsActive","endDate","setEndDate","itemsRemaining","setItemsRemaining","isWhitelistUser","setIsWhitelistUser","setIsPresale","isValidBalance","setIsValidBalance","discountPrice","setDiscountPrice","needTxnSplit","setNeedTxnSplit","setupTxn","setSetupTxn","rpcUrl","rpcHost","cluster","anchorWallet","useMemo","signAllTransactions","signTransaction","refreshCandyMachineState","useCallback","commitment","Connection","candyMachineId","getCandyMachineState","cndy","active","toNumber","presale","isWLUser","userPrice","price","whitelistMintSettings","getAtaForMint","token","getTokenAccountBalance","balance","amount","tokenMint","valid","gte","getBalance","limit","Math","min","itemsAvailable","itemsRedeemed","getCollectionPDA","collectionPDA","getAccountInfo","collectionPDAAccount","txnEstimate","retainAuthority","mode","burnEveryTime","expireOnUse","hideDuration","startsWith","beforeTransactions","afterTransactions","document","getElementById","click","connected","program","createAccountsForMint","setupMint","err","transaction","awaitTransactionSignatureConfirmation","txTimeout","mintOneToken","mintResult","metadataStatus","mintTxId","provider","metadataKey","remaining","msg","code","location","reload","indexOf","toggleMintButton","now","loop","setTimeout","Container","marginTop","maxWidth","position","paddingBottom","backgroundColor","Grid","container","direction","wrap","xs","Typography","formatNumber","asNumber","align","CANDY_MACHINE_PROGRAM","clusterUrl","handleTransaction","signatures","sig","equals","sendTransaction","error","broadcastTransaction","options","autoShowModal","val","Snackbar","autoHideDuration","onClose","Alert","createTheme","palette","process","e","getCandyMachineId","App","endpoint","clusterApiUrl","wallets","getPhantomWallet","getSolflareWallet","getSlopeWallet","getSolletWallet","getSolletExtensionWallet","ThemeProvider","ConnectionProvider","WalletProvider","autoConnect","DEFAULT_TIMEOUT","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","numberFormater","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","LAMPORTS_PER_SOL","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","CIVIC","buyer","TOKEN_PROGRAM_ID","getNetworkExpire","getNetworkToken","SequenceType","getErrorForTransaction","txid","confirmTransaction","getParsedConfirmedTransaction","tx","errors","meta","logMessages","forEach","m","regex","exec","lastIndex","push","sendTransactions","instructionSet","signersSet","sequenceType","Parallel","successCallback","ind","failCallback","block","WalletNotConnectedError","unsignedTxns","getRecentBlockhash","i","instructions","signers","Transaction","instruction","add","recentBlockhash","blockhash","setSigners","s","partialSign","partiallySignedTransactions","filter","t","fullySignedTransactions","signedTxns","concat","pendingTxns","signedTxnPromise","sendSignedTransaction","signedTransaction","slot","StopOnFailure","Promise","all","txs","result","awaitConfirmation","includesFeePayer","rawTransaction","serialize","skipPreflight","sendRawTransaction","confirmation","getUnixTs","timeout","startTime","sleep","simulateResult","simulateTransaction","logs","line","slice","JSON","stringify","_recentBlockhash","_disableBlockhashCaching","signData","serializeMessage","wireTransaction","_serialize","encodedTransaction","args","encoding","_rpcRequest","res","queryStatus","confirmations","subId","resolve","reject","onSignature","context","getSignatureStatuses","signatureStatuses","_signatureSubscriptions","removeSignatureListener","ms","TOKEN_METADATA_PROGRAM_ID","createAssociatedTokenAccountInstruction","associatedTokenAddress","payer","walletAddress","splTokenMintAddress","keys","pubkey","isSigner","isWritable","SystemProgram","programId","SYSVAR_RENT_PUBKEY","TransactionInstruction","preflightCommitment","fetchIdl","idl","fetch","id","authority","treasury","hiddenSettings","getMasterEdition","getMetadata","candyMachineAddress","getCollectionAuthorityRecordPDA","newAuthority","Keypair","generate","userTokenAccountAddress","MintLayout","span","getMinimumBalanceForRentExemption","fromPubkey","newAccountPubkey","space","lamports","createAccount","Token","createInitMintInstruction","createMintToInstruction","userTokenAccount","setupState","userPayingAccountAddress","remainingAccounts","whitelistToken","metadataAddress","masterEdition","candyMachineCreator","creatorBump","rm","mintNft","accounts","metadata","mintAuthority","updateAuthority","tokenMetadataProgram","tokenProgram","systemProgram","rent","clock","SYSVAR_CLOCK_PUBKEY","recentBlockhashes","SYSVAR_SLOT_HASHES_PUBKEY","instructionSysvarAccount","SYSVAR_INSTRUCTIONS_PUBKEY","collectionPda","collectionData","collectionMint","collectionAuthorityRecord","collectionMetadata","collectionMasterEdition","setCollectionDuringMint","instructionsMatrix","signersMatrix","txns","mintTxn"],"mappings":"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","file":"static/js/main.c7f74296.chunk.js","sourcesContent":["import { Connection, clusterApiUrl, PublicKey } from '@solana/web3.js';\r\nimport bs58 from 'bs58';\r\n\r\nconst MAX_NAME_LENGTH = 32;\r\nconst MAX_URI_LENGTH = 200;\r\nconst MAX_SYMBOL_LENGTH = 10;\r\nconst MAX_CREATOR_LEN = 32 + 1 + 1;\r\nconst MAX_CREATOR_LIMIT = 5;\r\nconst MAX_DATA_SIZE = 4 + MAX_NAME_LENGTH + 4 + MAX_SYMBOL_LENGTH + 4 + MAX_URI_LENGTH + 2 + 1 + 4 + MAX_CREATOR_LIMIT * MAX_CREATOR_LEN;\r\nconst MAX_METADATA_LEN = 1 + 32 + 32 + MAX_DATA_SIZE + 1 + 1 + 9 + 172;\r\nconst CREATOR_ARRAY_START = 1 + 32 + 32 + 4 + MAX_NAME_LENGTH + 4 + MAX_URI_LENGTH + 4 + MAX_SYMBOL_LENGTH + 2 + 1 + 4;\r\n\r\nconst TOKEN_METADATA_PROGRAM = new PublicKey('metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s');\r\nconst CANDY_MACHINE_V2_PROGRAM = new PublicKey('cndy3Z4yapfJBmL3ShUp5exZKqR3z33thTzeNMm2gRZ');\r\n\r\nexport async function getMintAddresses\r\n    (\r\n        firstCreatorAddress: PublicKey,\r\n        connection: Connection\r\n    ) {\r\n    const metadataAccounts = await connection.getProgramAccounts(\r\n        TOKEN_METADATA_PROGRAM,\r\n        {\r\n            // The mint address is located at byte 33 and lasts for 32 bytes.\r\n            dataSlice: { offset: 33, length: 32 },\r\n\r\n            filters: [\r\n                // Only get Metadata accounts.\r\n                { dataSize: MAX_METADATA_LEN },\r\n\r\n                // Filter using the first creator.\r\n                {\r\n                    memcmp: {\r\n                        offset: CREATOR_ARRAY_START,\r\n                        bytes: firstCreatorAddress.toBase58(),\r\n                    },\r\n                },\r\n            ],\r\n        },\r\n    );\r\n    \r\n    return metadataAccounts.map((metadataAccountInfo) => (\r\n        bs58.encode(metadataAccountInfo.account.data)\r\n    ));\r\n};\r\n\r\nexport async function getCandyMachineCreator(\r\n    candyMachine: PublicKey\r\n): Promise<[PublicKey, number]> {\r\n    return (\r\n        PublicKey.findProgramAddress(\r\n            [Buffer.from('candy_machine'), candyMachine.toBuffer()],\r\n            CANDY_MACHINE_V2_PROGRAM,\r\n        )\r\n    )\r\n}\r\n","import { Paper } from '@material-ui/core';\r\nimport Countdown from 'react-countdown';\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      padding: theme.spacing(0),\r\n      '& > *': {\r\n        margin: theme.spacing(0.4),\r\n        width: theme.spacing(6),\r\n        height: theme.spacing(6),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignContent: 'center',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        background: '#384457',\r\n        color: 'white',\r\n        borderRadius: 5,\r\n        fontSize: 10,\r\n      },\r\n    },\r\n    done: {\r\n      display: 'flex',\r\n      margin: 0,\r\n      marginBottom: theme.spacing(0.5),\r\n      height: theme.spacing(3.5),\r\n      padding: theme.spacing(1),\r\n      flexDirection: 'column',\r\n      alignContent: 'center',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      background: '#384457',\r\n      color: 'white',\r\n      borderRadius: 5,\r\n      fontWeight: 'bold',\r\n      fontSize: 18,\r\n    },\r\n    item: {\r\n      fontWeight: 'bold',\r\n      fontSize: 18,\r\n    },\r\n  }),\r\n);\r\n\r\ninterface MintCountdownProps {\r\n  date: Date | undefined;\r\n  style?: React.CSSProperties;\r\n  status?: string;\r\n  onComplete?: () => void;\r\n}\r\n\r\ninterface MintCountdownRender {\r\n  days: number;\r\n  hours: number;\r\n  minutes: number;\r\n  seconds: number;\r\n  completed: boolean;\r\n}\r\n\r\nexport const MintCountdown: React.FC<MintCountdownProps> = ({\r\n  date,\r\n  status,\r\n  style,\r\n  onComplete,\r\n}) => {\r\n  const classes = useStyles();\r\n  const renderCountdown = ({\r\n    days,\r\n    hours,\r\n    minutes,\r\n    seconds,\r\n    completed,\r\n  }: MintCountdownRender) => {\r\n    hours += days * 24;\r\n    if (completed) {\r\n      return status ? <span className={classes.done}>{status}</span> : null;\r\n    } else {\r\n      return (\r\n        <div className={classes.root} style={style}>\r\n          <Paper elevation={0}>\r\n            <span className={classes.item}>\r\n              {hours < 10 ? `0${hours}` : hours}\r\n            </span>\r\n            <span>hrs</span>\r\n          </Paper>\r\n          <Paper elevation={0}>\r\n            <span className={classes.item}>\r\n              {minutes < 10 ? `0${minutes}` : minutes}\r\n            </span>\r\n            <span>mins</span>\r\n          </Paper>\r\n          <Paper elevation={0}>\r\n            <span className={classes.item}>\r\n              {seconds < 10 ? `0${seconds}` : seconds}\r\n            </span>\r\n            <span>secs</span>\r\n          </Paper>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  if (date) {\r\n    return (\r\n      <Countdown\r\n        date={date}\r\n        onComplete={onComplete}\r\n        renderer={renderCountdown}\r\n      />\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n","import styled from 'styled-components';\r\nimport Button from '@material-ui/core/Button';\r\nimport { CandyMachineAccount } from './candy-machine';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { GatewayStatus, useGateway } from '@civic/solana-gateway-react';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { useConnection, useWallet } from '@solana/wallet-adapter-react';\r\nimport {\r\n  findGatewayToken,\r\n  getGatewayTokenAddressForOwnerAndGatekeeperNetwork,\r\n  onGatewayTokenChange,\r\n  removeAccountChangeListener,\r\n} from '@identity.com/solana-gateway-ts';\r\n\r\nexport const CTAButton = styled(Button)`\r\n  width: 100%;\r\n  height: 60px;\r\n  margin-top: 10px;\r\n  margin-bottom: 5px;\r\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\r\n  color: white;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n`; // add your own styles here\r\n\r\nexport const MintButton = ({\r\n  onMint,\r\n  candyMachine,\r\n  isMinting,\r\n  setIsMinting,\r\n  isActive,\r\n}: {\r\n  onMint: () => Promise<void>;\r\n  candyMachine?: CandyMachineAccount;\r\n  isMinting: boolean;\r\n  setIsMinting: (val: boolean) => void;\r\n  isActive: boolean;\r\n}) => {\r\n  const wallet = useWallet();\r\n  const connection = useConnection();\r\n  const [verified, setVerified] = useState(false);\r\n  const { requestGatewayToken, gatewayStatus } = useGateway();\r\n  const [webSocketSubscriptionId, setWebSocketSubscriptionId] = useState(-1);\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  const getMintButtonContent = () => {\r\n    if (candyMachine?.state.isSoldOut) {\r\n      return 'SOLD OUT';\r\n    } else if (isMinting) {\r\n      return <CircularProgress />;\r\n    } else if (\r\n      candyMachine?.state.isPresale ||\r\n      candyMachine?.state.isWhitelistOnly\r\n    ) {\r\n      return 'WHITELIST MINT';\r\n    }\r\n\r\n    return 'MINT';\r\n  };\r\n\r\n  useEffect(() => {\r\n    const mint = async () => {\r\n      await removeAccountChangeListener(\r\n        connection.connection,\r\n        webSocketSubscriptionId,\r\n      );\r\n      await onMint();\r\n\r\n      setClicked(false);\r\n      setVerified(false);\r\n    };\r\n    if (verified && clicked) {\r\n      mint();\r\n    }\r\n  }, [\r\n    verified,\r\n    clicked,\r\n    connection.connection,\r\n    onMint,\r\n    webSocketSubscriptionId,\r\n  ]);\r\n\r\n  const previousGatewayStatus = usePrevious(gatewayStatus);\r\n  useEffect(() => {\r\n    const fromStates = [\r\n      GatewayStatus.NOT_REQUESTED,\r\n      GatewayStatus.REFRESH_TOKEN_REQUIRED,\r\n    ];\r\n    const invalidToStates = [...fromStates, GatewayStatus.UNKNOWN];\r\n    if (\r\n      fromStates.find(state => previousGatewayStatus === state) &&\r\n      !invalidToStates.find(state => gatewayStatus === state)\r\n    ) {\r\n      setIsMinting(true);\r\n    }\r\n    console.log('change: ', gatewayStatus);\r\n  }, [setIsMinting, previousGatewayStatus, gatewayStatus]);\r\n\r\n  return (\r\n    <CTAButton\r\n      disabled={isMinting || !isActive}\r\n      onClick={async () => {\r\n        if (candyMachine?.state.isActive && candyMachine?.state.gatekeeper) {\r\n          const network =\r\n            candyMachine.state.gatekeeper.gatekeeperNetwork.toBase58();\r\n          if (network === 'ignREusXmGrscGNUesoU9mxfds9AiYTezUKex2PsZV6') {\r\n            if (gatewayStatus === GatewayStatus.ACTIVE) {\r\n              await onMint();\r\n            } else {\r\n              // setIsMinting(true);\r\n              await requestGatewayToken();\r\n              console.log('after: ', gatewayStatus);\r\n            }\r\n          } else if (\r\n            network === 'ttib7tuX8PTWPqFsmUFQTj78MbRhUmqxidJRDv4hRRE' ||\r\n            network === 'tibePmPaoTgrs929rWpu755EXaxC7M3SthVCf6GzjZt'\r\n          ) {\r\n            setClicked(true);\r\n            const gatewayToken = await findGatewayToken(\r\n              connection.connection,\r\n              wallet.publicKey!,\r\n              candyMachine.state.gatekeeper.gatekeeperNetwork,\r\n            );\r\n\r\n            if (gatewayToken?.isValid()) {\r\n              await onMint();\r\n            } else {\r\n              window.open(\r\n                `https://verify.encore.fans/?gkNetwork=${network}`,\r\n                '_blank',\r\n              );\r\n\r\n              const gatewayTokenAddress =\r\n                await getGatewayTokenAddressForOwnerAndGatekeeperNetwork(\r\n                  wallet.publicKey!,\r\n                  candyMachine.state.gatekeeper.gatekeeperNetwork,\r\n                );\r\n\r\n              setWebSocketSubscriptionId(\r\n                onGatewayTokenChange(\r\n                  connection.connection,\r\n                  gatewayTokenAddress,\r\n                  () => setVerified(true),\r\n                  'confirmed',\r\n                ),\r\n              );\r\n            }\r\n          } else {\r\n            setClicked(false);\r\n            throw new Error(`Unknown Gatekeeper Network: ${network}`);\r\n          }\r\n        } else {\r\n          await onMint();\r\n          setClicked(false);\r\n        }\r\n      }}\r\n      variant=\"contained\"\r\n    >\r\n      {getMintButtonContent()}\r\n    </CTAButton>\r\n  );\r\n};\r\n\r\nfunction usePrevious<T>(value: T): T | undefined {\r\n  const ref = useRef<T>();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]);\r\n  return ref.current;\r\n}\r\n","let DATA: any = {\r\n    \"Special\": {\r\n        \"Angel mushroom\": 0,\r\n        \"Angel wings\": 0,\r\n        \"Angry muggy\": 0,\r\n        \"Bubblegum demon\": 0,\r\n        \"Bubblegum ghost\": 0,\r\n        \"Bubblegum spirit\": 0,\r\n        \"Classic ghost\": 0,\r\n        \"Crystal angel\": 0,\r\n        \"Crystal fairy\": 0,\r\n        \"Crystal turtle\": 0,\r\n        \"Demon wings\": 0,\r\n        \"Evil mushroom\": 0,\r\n        \"Evil rainbow\": 0,\r\n        \"Fairy wings\": 0,\r\n        \"Fire demon\": 0,\r\n        \"Fire spirit\": 0,\r\n        \"Fire sword\": 0,\r\n        \"Ghost mushroom\": 0,\r\n        \"Ice sword\": 0,\r\n        \"Maniac muggy\": 0,\r\n        \"Mint ghost\": 0,\r\n        \"Octopus\": 0,\r\n        \"Pink crystal fairy\": 0,\r\n        \"Pirate flag\": 0,\r\n        \"Rainbow\": 0,\r\n        \"Red Mushroom\": 0,\r\n        \"Rocket\": 0,\r\n        \"Scared muggy\": 0,\r\n        \"Thunder mushroom\": 0,\r\n        \"Toxic spirit\": 0,\r\n        \"Toxic sword\": 0,\r\n    },\r\n    \"Head\": {\r\n        \"Dark cyan afro\": 0,\r\n        \"Electric afro\": 0,\r\n        \"Electric hair\": 0,\r\n        \"Meow yellow mullet\": 0,\r\n        \"Green punk hair\": 0,\r\n        \"Living hair\": 0,\r\n        \"Halo pink hair\": 0,\r\n        \"Chill hat\": 0,\r\n        \"Dark blue punk hair\": 0,\r\n        \"Sky blue mullet\": 0,\r\n        \"Astronaut helmet\": 0,\r\n        \"Mouse hat\": 0,\r\n        \"Meow pink mullet\": 0,\r\n        \"Island hat\": 0,\r\n        \"B cap\": 0,\r\n        \"Stylish hat\": 0,\r\n        \"Botanic helmet\": 0,\r\n        \"Flower hair\": 0,\r\n        \"Demon astronaut helmet\": 0,\r\n        \"Botanic hair\": 0,\r\n        \"Purple mullet\": 0,\r\n        \"Duality hair\": 0,\r\n        \"6 Hat\": 0,\r\n        \"Knife in the head\": 0,\r\n        \"Demon green head\": 0,\r\n        \"Fire hair\": 0,\r\n        \"Bubblegum astronaut helmet\": 0,\r\n        \"Green horned mullet\": 0,\r\n        \"Orange electric hair\": 0,\r\n        \"Yes cap\": 0\r\n    },\r\n    \"Clothing\": {\r\n        \"Trippy Tshirt\": 0,\r\n        \"Red space suit\": 0,\r\n        \"Coral tank top\": 0,\r\n        \"Orange space suit\": 0,\r\n        \"Locked heart Tshirt\": 0,\r\n        \"Alien overall\": 0,\r\n        \"Samurai kimono\": 0,\r\n        \"College jacket\": 0,\r\n        \"Bomber jacket\": 0,\r\n        \"Stylish jacket\": 0,\r\n        \"Iris sweater\": 0,\r\n        \"Galaxity jacket\": 0,\r\n        \"Disco shirt\": 0,\r\n        \"Broken heart\": 0,\r\n        \"Yellow jacket\": 0,\r\n        \"Ronin kimono\": 0,\r\n        \"666 Tshirt\": 0,\r\n        \"Biker jacket\": 0,\r\n        \"Tiger coat\": 0,\r\n        \"Duality shirt\": 0,\r\n        \"Trippy hoodie\": 0,\r\n        \"Superstar jacket\": 0,\r\n        \"Demon overall\": 0,\r\n        \"Money jacket\": 0,\r\n        \"Overcoat\": 0,\r\n        \"Leopard jacket\": 0,\r\n        \"McWilds\": 0,\r\n        \"Periwinkle tank top\": 0,\r\n        \"Wild Floyd Tshirt\": 0,\r\n        \"Orange sweater\": 0,\r\n        \"Green Hoodie\": 0,\r\n        \"Smile Tshirt\": 0,\r\n        \"Melon tank top\": 0,\r\n        \"Sad vibes Tshirt\": 0,\r\n        \"Blue jacket\": 0,\r\n        \"Lemon jacket\": 0,\r\n        \"Red coat\": 0,\r\n        \"Purple jacket\": 0,\r\n        \"Cool tank top\": 0,\r\n        \"Cyborg arm\": 0\r\n    },\r\n    \"Eyes\": {\r\n        \"Green bulging eye\": 0,\r\n        \"In love\": 0,\r\n        \"Mad scientist glasses\": 0,\r\n        \"Money\": 0,\r\n        \"Red round glasses\": 0,\r\n        \"Fire demon\": 0,\r\n        \"Purple\": 0,\r\n        \"Skull patch\": 0,\r\n        \"Scientist glasses\": 0,\r\n        \"Red sunglasses\": 0,\r\n        \"Candy\": 0,\r\n        \"Normal\": 0,\r\n        \"Cyan\": 0,\r\n        \"Iluminati\": 0,\r\n        \"Dizzy\": 0,\r\n        \"Blue bulging eyes\": 0,\r\n        \"Red\": 0,\r\n        \"Sky blue\": 0,\r\n        \"Heart\": 0,\r\n        \"Green & purple\": 0,\r\n        \"Brown\": 0,\r\n        \"Green bulging eyes\": 0,\r\n        \"Love & hate\": 0,\r\n        \"Broken blue sunglasses\": 0,\r\n        \"Pink\": 0,\r\n        \"Mixed\": 0,\r\n        \"3D glasses\": 0,\r\n        \"Red bulging eyes\": 0,\r\n        \"Cross\": 0,\r\n        \"Possessed\": 0,\r\n        \"Sky blue round glasses\": 0,\r\n        \"Heart patch\": 0,\r\n        \"Crystal blue\": 0,\r\n        \"Gray eyes\": 0,\r\n        \"Dark blue sunglasses\": 0,\r\n        \"Black bulging eyes\": 0,\r\n        \"Broken pink sunglasses\": 0,\r\n        \"Cyborg\": 0,\r\n        \"Fire\": 0,\r\n        \"Green\": 0\r\n    },\r\n    \"Wild Friend\": {\r\n        \"Winged egg\": 0,\r\n        \"Crystal angel\": 0,\r\n        \"Ghost friend\": 0,\r\n        \"Demon hallo friend\": 0,\r\n        \"Cryogenic hand\": 0,\r\n        \"Smiley smartphone\": 0,\r\n        \"Zombie hand\": 0,\r\n        \"Undead smoke\": 0,\r\n        \"Lvl 1 UFO\": 0,\r\n        \"Fire crystal angel\": 0,\r\n        \"Green demon\": 0,\r\n        \"Demon eye\": 0,\r\n        \"Tree eyes demon\": 0,\r\n        \"Demon egg\": 0,\r\n        \"Bubblegum ghost\": 0,\r\n        \"Devil flying eye\": 0,\r\n        \"666 jet\": 0,\r\n        \"Angry octopus\": 0,\r\n        \"Starlight spirit\": 0,\r\n        \"Moonligth spirit\": 0,\r\n        \"Cap friend\": 0,\r\n        \"F4ck love\": 0,\r\n        \"Winged illuminati\": 0,\r\n        \"Mad smartphone\": 0,\r\n        \"Toxic crystal angel\": 0,\r\n        \"Red demon\": 0,\r\n        \"Blue demon\": 0,\r\n        \"Lvl 2 UFO\": 0,\r\n        \"Tropical friend\": 0,\r\n        \"Winged drop\": 0\r\n    },\r\n    \"Mouth\": {\r\n        \"Smiley fangs\": 0,\r\n        \"Serpent tongue\": 0,\r\n        \"Unimpressed\": 0,\r\n        \"Surprised\": 0,\r\n        \"Vampire\": 0,\r\n        \"Beast\": 0,\r\n        \"Golden fangs\": 0,\r\n        \"Golden tooth\": 0,\r\n        \"Smoking\": 0,\r\n        \"Yelling\": 0,\r\n        \"Radioactive\": 0,\r\n        \"Fire breath\": 0,\r\n        \"Angry\": 0,\r\n        \"Feared\": 0,\r\n        \"Hippie mask\": 0,\r\n        \"Drooling with love\": 0,\r\n        \"Evil\": 0,\r\n        \"Toxic mask\": 0,\r\n        \"Purple tongue\": 0,\r\n        \"Bubblegum\": 0,\r\n        \"Cyborg\": 0,\r\n        \"Mutant\": 0,\r\n        \"Pink mask\": 0,\r\n        \"Demonic\": 0,\r\n        \"Evil bubblegum\": 0,\r\n        \"Disco fangs\": 0,\r\n        \"Scarecrow\": 0,\r\n        \"Amazed\": 0,\r\n        \"Tongue\": 0,\r\n        \"Normal\": 0\r\n    },\r\n    \"Accesory\": {\r\n        \"Smiley\": 0,\r\n        \"Emerald\": 0,\r\n        \"Fire\": 0,\r\n        \"Scar\": 0,\r\n        \"Lunar\": 0,\r\n        \"Hippie medal\": 0,\r\n        \"Illuminati\": 0,\r\n        \"Diamond\": 0,\r\n        \"Tattoo\": 0,\r\n        \"Band aid\": 0,\r\n        \"Yin yang\": 0,\r\n        \"Triple hoops\": 0,\r\n        \"Double hoops\": 0,\r\n        \"Thunder\": 0,\r\n        \"Golden eye\": 0,\r\n        \"Shuriken\": 0,\r\n        \"Cloud\": 0,\r\n        \"Love and thunder\": 0,\r\n        \"Star\": 0,\r\n        \"Leaf\": 0\r\n    },\r\n    \"Background\": {\r\n        \"Green wall\": 0,\r\n        \"Skyblue\": 0,\r\n        \"Space\": 0,\r\n        \"Cloudy day\": 0,\r\n        \"Transdimensional\": 0,\r\n        \"Orange\": 0,\r\n        \"High mountains\": 0,\r\n        \"Ocean\": 0,\r\n        \"Solana\": 0,\r\n        \"Dark sunset\": 0,\r\n        \"Psychodelic downward\": 0,\r\n        \"Rose\": 0,\r\n        \"Sunset\": 0,\r\n        \"Cloudy night\": 0,\r\n        \"Twister\": 0,\r\n        \"Acid pink\": 0,\r\n        \"Coral\": 0,\r\n        \"Night city\": 0,\r\n        \"Wild beach\": 0,\r\n        \"Trippy wall\": 0,\r\n        \"Thunder storm\": 0,\r\n        \"Purple wall\": 0,\r\n        \"Psychodelic upward\": 0,\r\n        \"Jungle\": 0,\r\n        \"Magenta\": 0,\r\n        \"Cyan\": 0\r\n    },\r\n    \"Skin\": {\r\n        \"Duality\": 0,\r\n        \"Zombie\": 0,\r\n        \"Invisible\": 0,\r\n        \"Bubblegum\": 0,\r\n        \"Camel\": 0,\r\n        \"Latte\": 0,\r\n        \"Caramel\": 0,\r\n        \"Alien\": 0,\r\n        \"Vanilla\": 0,\r\n        \"Cyborg\": 0\r\n    }\r\n}\r\n\r\nexport default DATA","let NFTINDEX:any = {\r\n    \"0\": {\r\n        \"name\": \"prueba  #0\",\r\n        \"symbol\": \"P\",\r\n        \"description\": \"prueba\",\r\n        \"seller_fee_basis_points\": 500,\r\n        \"image\": \"https://arweave.net/SgFQg601qyKLskIaZfPxpzzwTSZcyG5vSPk4m9h4zak?ext=png\",\r\n        \"edition\": 0,\r\n        \"attributes\": [\r\n            {\r\n                \"trait_type\": \"Background\",\r\n                \"value\": \"Cloudy night\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Skin\",\r\n                \"value\": \"Camel\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Eyes\",\r\n                \"value\": \"Sky blue round glasses\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Mouth\",\r\n                \"value\": \"Cyborg\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Special\",\r\n                \"value\": \"Toxic sword\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Head\",\r\n                \"value\": \"Green punk hair\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Clothing\",\r\n                \"value\": \"Leopard jacket\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Accesory\",\r\n                \"value\": \"Lunar\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Wild Friend\",\r\n                \"value\": \"Devil flying eye\"\r\n            }\r\n        ],\r\n        \"properties\": {\r\n            \"files\": [\r\n                {\r\n                    \"uri\": \"https://arweave.net/SgFQg601qyKLskIaZfPxpzzwTSZcyG5vSPk4m9h4zak?ext=png\",\r\n                    \"type\": \"image/png\"\r\n                }\r\n            ],\r\n            \"category\": \"image\",\r\n            \"creators\": [\r\n                {\r\n                    \"address\": \"CibhvTfoCj8qamMrLGucbNUJjEYJmgC2sd4XDbUnjgM9\",\r\n                    \"share\": 100\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"1\": {\r\n        \"name\": \"prueba  #1\",\r\n        \"symbol\": \"P\",\r\n        \"description\": \"prueba\",\r\n        \"seller_fee_basis_points\": 500,\r\n        \"image\": \"https://arweave.net/WJXAeKsgOHCWfgOTzpKgycw0teT98Qv3kfR659MqgS8?ext=png\",\r\n        \"edition\": 1,\r\n        \"attributes\": [\r\n            {\r\n                \"trait_type\": \"Background\",\r\n                \"value\": \"Night city\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Skin\",\r\n                \"value\": \"Zombie\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Eyes\",\r\n                \"value\": \"Red bulging eyes\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Mouth\",\r\n                \"value\": \"Surprised\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Special\",\r\n                \"value\": \"Fairy wings\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Head\",\r\n                \"value\": \"Green punk hair\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Clothing\",\r\n                \"value\": \"Blue jacket\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Accesory\",\r\n                \"value\": \"Band aid\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Wild Friend\",\r\n                \"value\": \"F4ck love\"\r\n            }\r\n        ],\r\n        \"properties\": {\r\n            \"files\": [\r\n                {\r\n                    \"uri\": \"https://arweave.net/WJXAeKsgOHCWfgOTzpKgycw0teT98Qv3kfR659MqgS8?ext=png\",\r\n                    \"type\": \"image/png\"\r\n                }\r\n            ],\r\n            \"category\": \"image\",\r\n            \"creators\": [\r\n                {\r\n                    \"address\": \"CibhvTfoCj8qamMrLGucbNUJjEYJmgC2sd4XDbUnjgM9\",\r\n                    \"share\": 100\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"8\": {\r\n        \"name\": \"prueba  #8\",\r\n        \"symbol\": \"P\",\r\n        \"description\": \"prueba\",\r\n        \"seller_fee_basis_points\": 500,\r\n        \"image\": \"https://arweave.net/J89UKmmwtLqsuMyEvxRiukT1-dr1wvJuVYO3LHcHhxM?ext=png\",\r\n        \"edition\": 8,\r\n        \"attributes\": [\r\n            {\r\n                \"trait_type\": \"Background\",\r\n                \"value\": \"Acid pink\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Skin\",\r\n                \"value\": \"Latte\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Eyes\",\r\n                \"value\": \"Pink\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Mouth\",\r\n                \"value\": \"Unimpressed\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Special\",\r\n                \"value\": \"Bubblegum ghost\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Head\",\r\n                \"value\": \"Demon astronaut helmet\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Clothing\",\r\n                \"value\": \"Duality shirt\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Accesory\",\r\n                \"value\": \"Yin yang\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Wild Friend\",\r\n                \"value\": \"Cap friend\"\r\n            }\r\n        ],\r\n        \"properties\": {\r\n            \"files\": [\r\n                {\r\n                    \"uri\": \"https://arweave.net/J89UKmmwtLqsuMyEvxRiukT1-dr1wvJuVYO3LHcHhxM?ext=png\",\r\n                    \"type\": \"image/png\"\r\n                }\r\n            ],\r\n            \"category\": \"image\",\r\n            \"creators\": [\r\n                {\r\n                    \"address\": \"CibhvTfoCj8qamMrLGucbNUJjEYJmgC2sd4XDbUnjgM9\",\r\n                    \"share\": 100\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"9\": {\r\n        \"name\": \"prueba  #9\",\r\n        \"symbol\": \"P\",\r\n        \"description\": \"prueba\",\r\n        \"seller_fee_basis_points\": 500,\r\n        \"image\": \"https://arweave.net/0HX3rlGpIVy7jsBUzWnZBuijjU6LqGMdyxDpodX7C4M?ext=png\",\r\n        \"edition\": 9,\r\n        \"attributes\": [\r\n            {\r\n                \"trait_type\": \"Background\",\r\n                \"value\": \"Trippy wall\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Skin\",\r\n                \"value\": \"Invisible\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Eyes\",\r\n                \"value\": \"Normal\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Mouth\",\r\n                \"value\": \"Angry\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Special\",\r\n                \"value\": \"Scared muggy\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Head\",\r\n                \"value\": \"Halo pink hair\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Clothing\",\r\n                \"value\": \"Yellow jacket\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Accesory\",\r\n                \"value\": \"Band aid\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Wild Friend\",\r\n                \"value\": \"Zombie hand\"\r\n            }\r\n        ],\r\n        \"properties\": {\r\n            \"files\": [\r\n                {\r\n                    \"uri\": \"https://arweave.net/0HX3rlGpIVy7jsBUzWnZBuijjU6LqGMdyxDpodX7C4M?ext=png\",\r\n                    \"type\": \"image/png\"\r\n                }\r\n            ],\r\n            \"category\": \"image\",\r\n            \"creators\": [\r\n                {\r\n                    \"address\": \"CibhvTfoCj8qamMrLGucbNUJjEYJmgC2sd4XDbUnjgM9\",\r\n                    \"share\": 100\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"10\": {\r\n        \"name\": \"prueba  #10\",\r\n        \"symbol\": \"P\",\r\n        \"description\": \"prueba\",\r\n        \"seller_fee_basis_points\": 500,\r\n        \"image\": \"https://arweave.net/xRGZpxd-cRkcxtqVu49kXaMxfVAuIbJbn1d_4GcNSiQ?ext=png\",\r\n        \"edition\": 10,\r\n        \"attributes\": [\r\n            {\r\n                \"trait_type\": \"Background\",\r\n                \"value\": \"Solana\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Skin\",\r\n                \"value\": \"Zombie\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Eyes\",\r\n                \"value\": \"Candy\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Mouth\",\r\n                \"value\": \"Toxic mask\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Special\",\r\n                \"value\": \"Ice sword\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Head\",\r\n                \"value\": \"Yes cap\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Clothing\",\r\n                \"value\": \"Bomber jacket\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Accesory\",\r\n                \"value\": \"Love and thunder\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Wild Friend\",\r\n                \"value\": \"Blue demon\"\r\n            }\r\n        ],\r\n        \"properties\": {\r\n            \"files\": [\r\n                {\r\n                    \"uri\": \"https://arweave.net/xRGZpxd-cRkcxtqVu49kXaMxfVAuIbJbn1d_4GcNSiQ?ext=png\",\r\n                    \"type\": \"image/png\"\r\n                }\r\n            ],\r\n            \"category\": \"image\",\r\n            \"creators\": [\r\n                {\r\n                    \"address\": \"CibhvTfoCj8qamMrLGucbNUJjEYJmgC2sd4XDbUnjgM9\",\r\n                    \"share\": 100\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"12\": {\r\n        \"name\": \"prueba  #12\",\r\n        \"symbol\": \"P\",\r\n        \"description\": \"prueba\",\r\n        \"seller_fee_basis_points\": 500,\r\n        \"image\": \"https://arweave.net/MdARE9ESRd4TxCK502tVPER27g4BvBYwOQABSz16mkQ?ext=png\",\r\n        \"edition\": 12,\r\n        \"attributes\": [\r\n            {\r\n                \"trait_type\": \"Background\",\r\n                \"value\": \"Transdimensional\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Skin\",\r\n                \"value\": \"Duality\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Eyes\",\r\n                \"value\": \"Broken pink sunglasses\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Mouth\",\r\n                \"value\": \"Drooling with love\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Special\",\r\n                \"value\": \"Demon wings\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Head\",\r\n                \"value\": \"Mouse hat\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Clothing\",\r\n                \"value\": \"Samurai kimono\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Accesory\",\r\n                \"value\": \"Band aid\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Wild Friend\",\r\n                \"value\": \"Demon egg\"\r\n            }\r\n        ],\r\n        \"properties\": {\r\n            \"files\": [\r\n                {\r\n                    \"uri\": \"https://arweave.net/MdARE9ESRd4TxCK502tVPER27g4BvBYwOQABSz16mkQ?ext=png\",\r\n                    \"type\": \"image/png\"\r\n                }\r\n            ],\r\n            \"category\": \"image\",\r\n            \"creators\": [\r\n                {\r\n                    \"address\": \"CibhvTfoCj8qamMrLGucbNUJjEYJmgC2sd4XDbUnjgM9\",\r\n                    \"share\": 100\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"20\": {\r\n        \"name\": \"prueba  #20\",\r\n        \"symbol\": \"P\",\r\n        \"description\": \"prueba\",\r\n        \"seller_fee_basis_points\": 500,\r\n        \"image\": \"https://arweave.net/60b4DjdaynosOAsC_kchT79jqDEJRRy9k1Q57F2ADSU?ext=png\",\r\n        \"edition\": 20,\r\n        \"attributes\": [\r\n            {\r\n                \"trait_type\": \"Background\",\r\n                \"value\": \"Twister\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Skin\",\r\n                \"value\": \"Alien\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Eyes\",\r\n                \"value\": \"Heart\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Mouth\",\r\n                \"value\": \"Radioactive\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Special\",\r\n                \"value\": \"Bubblegum ghost\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Head\",\r\n                \"value\": \"Island hat\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Clothing\",\r\n                \"value\": \"Broken heart\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Accesory\",\r\n                \"value\": \"Triple hoops\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Wild Friend\",\r\n                \"value\": \"Winged drop\"\r\n            }\r\n        ],\r\n        \"properties\": {\r\n            \"files\": [\r\n                {\r\n                    \"uri\": \"https://arweave.net/60b4DjdaynosOAsC_kchT79jqDEJRRy9k1Q57F2ADSU?ext=png\",\r\n                    \"type\": \"image/png\"\r\n                }\r\n            ],\r\n            \"category\": \"image\",\r\n            \"creators\": [\r\n                {\r\n                    \"address\": \"CibhvTfoCj8qamMrLGucbNUJjEYJmgC2sd4XDbUnjgM9\",\r\n                    \"share\": 100\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"21\": {\r\n        \"name\": \"prueba  #21\",\r\n        \"symbol\": \"P\",\r\n        \"description\": \"prueba\",\r\n        \"seller_fee_basis_points\": 500,\r\n        \"image\": \"https://arweave.net/ocKzSz_EO1EFUEe8LF_0foMeINKQIDpzUM9DMpH5zFk?ext=png\",\r\n        \"edition\": 21,\r\n        \"attributes\": [\r\n            {\r\n                \"trait_type\": \"Background\",\r\n                \"value\": \"Psychodelic downward\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Skin\",\r\n                \"value\": \"Zombie\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Eyes\",\r\n                \"value\": \"Brown\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Mouth\",\r\n                \"value\": \"Cyborg\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Special\",\r\n                \"value\": \"Evil rainbow\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Head\",\r\n                \"value\": \"Duality hair\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Clothing\",\r\n                \"value\": \"Purple jacket\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Accesory\",\r\n                \"value\": \"Diamond\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Wild Friend\",\r\n                \"value\": \"Winged illuminati\"\r\n            }\r\n        ],\r\n        \"properties\": {\r\n            \"files\": [\r\n                {\r\n                    \"uri\": \"https://arweave.net/ocKzSz_EO1EFUEe8LF_0foMeINKQIDpzUM9DMpH5zFk?ext=png\",\r\n                    \"type\": \"image/png\"\r\n                }\r\n            ],\r\n            \"category\": \"image\",\r\n            \"creators\": [\r\n                {\r\n                    \"address\": \"CibhvTfoCj8qamMrLGucbNUJjEYJmgC2sd4XDbUnjgM9\",\r\n                    \"share\": 100\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"36\": {\r\n        \"name\": \"prueba  #36\",\r\n        \"symbol\": \"P\",\r\n        \"description\": \"prueba\",\r\n        \"seller_fee_basis_points\": 500,\r\n        \"image\": \"https://arweave.net/2KD3wKG7EOZAhF2JIm5ZxNN3DT1bt-yaAUWtROA0ueE?ext=png\",\r\n        \"edition\": 36,\r\n        \"attributes\": [\r\n            {\r\n                \"trait_type\": \"Background\",\r\n                \"value\": \"Trippy wall\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Skin\",\r\n                \"value\": \"Vanilla\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Eyes\",\r\n                \"value\": \"Red bulging eyes\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Mouth\",\r\n                \"value\": \"Beast\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Special\",\r\n                \"value\": \"Angry muggy\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Head\",\r\n                \"value\": \"Demon astronaut helmet\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Clothing\",\r\n                \"value\": \"Yellow jacket\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Accesory\",\r\n                \"value\": \"Love and thunder\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Wild Friend\",\r\n                \"value\": \"Fire crystal angel\"\r\n            }\r\n        ],\r\n        \"properties\": {\r\n            \"files\": [\r\n                {\r\n                    \"uri\": \"https://arweave.net/2KD3wKG7EOZAhF2JIm5ZxNN3DT1bt-yaAUWtROA0ueE?ext=png\",\r\n                    \"type\": \"image/png\"\r\n                }\r\n            ],\r\n            \"category\": \"image\",\r\n            \"creators\": [\r\n                {\r\n                    \"address\": \"CibhvTfoCj8qamMrLGucbNUJjEYJmgC2sd4XDbUnjgM9\",\r\n                    \"share\": 100\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"37\": {\r\n        \"name\": \"prueba  #37\",\r\n        \"symbol\": \"P\",\r\n        \"description\": \"prueba\",\r\n        \"seller_fee_basis_points\": 500,\r\n        \"image\": \"https://arweave.net/CVh9v_CfKMnr4CTAkJqOkmmCv-5xvhJablM5nqARHoo?ext=png\",\r\n        \"edition\": 37,\r\n        \"attributes\": [\r\n            {\r\n                \"trait_type\": \"Background\",\r\n                \"value\": \"Transdimensional\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Skin\",\r\n                \"value\": \"Duality\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Eyes\",\r\n                \"value\": \"Sky blue round glasses\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Mouth\",\r\n                \"value\": \"Purple tongue\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Special\",\r\n                \"value\": \"Bubblegum spirit\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Head\",\r\n                \"value\": \"Bubblegum astronaut helmet\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Clothing\",\r\n                \"value\": \"Duality shirt\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Accesory\",\r\n                \"value\": \"Fire\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Wild Friend\",\r\n                \"value\": \"Devil flying eye\"\r\n            }\r\n        ],\r\n        \"properties\": {\r\n            \"files\": [\r\n                {\r\n                    \"uri\": \"https://arweave.net/CVh9v_CfKMnr4CTAkJqOkmmCv-5xvhJablM5nqARHoo?ext=png\",\r\n                    \"type\": \"image/png\"\r\n                }\r\n            ],\r\n            \"category\": \"image\",\r\n            \"creators\": [\r\n                {\r\n                    \"address\": \"CibhvTfoCj8qamMrLGucbNUJjEYJmgC2sd4XDbUnjgM9\",\r\n                    \"share\": 100\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"40\": {\r\n        \"name\": \"prueba  #40\",\r\n        \"symbol\": \"P\",\r\n        \"description\": \"prueba\",\r\n        \"seller_fee_basis_points\": 500,\r\n        \"image\": \"https://arweave.net/bqyec29Iu-pxszaOwO78eLU8U3SCtuUJH0W6fGfFUpQ?ext=png\",\r\n        \"edition\": 40,\r\n        \"attributes\": [\r\n            {\r\n                \"trait_type\": \"Background\",\r\n                \"value\": \"Purple wall\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Skin\",\r\n                \"value\": \"Vanilla\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Eyes\",\r\n                \"value\": \"Blue bulging eyes\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Mouth\",\r\n                \"value\": \"Pink mask\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Special\",\r\n                \"value\": \"Crystal turtle\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Head\",\r\n                \"value\": \"Demon astronaut helmet\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Clothing\",\r\n                \"value\": \"Cyborg arm\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Accesory\",\r\n                \"value\": \"Diamond\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Wild Friend\",\r\n                \"value\": \"Winged drop\"\r\n            }\r\n        ],\r\n        \"properties\": {\r\n            \"files\": [\r\n                {\r\n                    \"uri\": \"https://arweave.net/bqyec29Iu-pxszaOwO78eLU8U3SCtuUJH0W6fGfFUpQ?ext=png\",\r\n                    \"type\": \"image/png\"\r\n                }\r\n            ],\r\n            \"category\": \"image\",\r\n            \"creators\": [\r\n                {\r\n                    \"address\": \"CibhvTfoCj8qamMrLGucbNUJjEYJmgC2sd4XDbUnjgM9\",\r\n                    \"share\": 100\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"44\": {\r\n        \"name\": \"prueba  #44\",\r\n        \"symbol\": \"P\",\r\n        \"description\": \"prueba\",\r\n        \"seller_fee_basis_points\": 500,\r\n        \"image\": \"https://arweave.net/bRBcZ8S688pSZ3HacG2U6-S3HH4KJC7vgDJv1pJ9V5w?ext=png\",\r\n        \"edition\": 44,\r\n        \"attributes\": [\r\n            {\r\n                \"trait_type\": \"Background\",\r\n                \"value\": \"Trippy wall\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Skin\",\r\n                \"value\": \"Alien\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Eyes\",\r\n                \"value\": \"Fire demon\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Mouth\",\r\n                \"value\": \"Smoking\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Special\",\r\n                \"value\": \"Classic ghost\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Head\",\r\n                \"value\": \"Orange electric hair\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Clothing\",\r\n                \"value\": \"Yellow jacket\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Accesory\",\r\n                \"value\": \"Hippie medal\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Wild Friend\",\r\n                \"value\": \"Starlight spirit\"\r\n            }\r\n        ],\r\n        \"properties\": {\r\n            \"files\": [\r\n                {\r\n                    \"uri\": \"https://arweave.net/bRBcZ8S688pSZ3HacG2U6-S3HH4KJC7vgDJv1pJ9V5w?ext=png\",\r\n                    \"type\": \"image/png\"\r\n                }\r\n            ],\r\n            \"category\": \"image\",\r\n            \"creators\": [\r\n                {\r\n                    \"address\": \"CibhvTfoCj8qamMrLGucbNUJjEYJmgC2sd4XDbUnjgM9\",\r\n                    \"share\": 100\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"45\": {\r\n        \"name\": \"prueba  #45\",\r\n        \"symbol\": \"P\",\r\n        \"description\": \"prueba\",\r\n        \"seller_fee_basis_points\": 500,\r\n        \"image\": \"https://arweave.net/HiTEjHkYcyUiLCrW0-EMAGwvVnKuOjEg0EDml5sLj0c?ext=png\",\r\n        \"edition\": 45,\r\n        \"attributes\": [\r\n            {\r\n                \"trait_type\": \"Background\",\r\n                \"value\": \"Twister\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Skin\",\r\n                \"value\": \"Camel\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Eyes\",\r\n                \"value\": \"Red bulging eyes\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Mouth\",\r\n                \"value\": \"Serpent tongue\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Special\",\r\n                \"value\": \"Toxic sword\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Head\",\r\n                \"value\": \"Botanic hair\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Clothing\",\r\n                \"value\": \"Melon tank top\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Accesory\",\r\n                \"value\": \"Star\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Wild Friend\",\r\n                \"value\": \"Winged illuminati\"\r\n            }\r\n        ],\r\n        \"properties\": {\r\n            \"files\": [\r\n                {\r\n                    \"uri\": \"https://arweave.net/HiTEjHkYcyUiLCrW0-EMAGwvVnKuOjEg0EDml5sLj0c?ext=png\",\r\n                    \"type\": \"image/png\"\r\n                }\r\n            ],\r\n            \"category\": \"image\",\r\n            \"creators\": [\r\n                {\r\n                    \"address\": \"CibhvTfoCj8qamMrLGucbNUJjEYJmgC2sd4XDbUnjgM9\",\r\n                    \"share\": 100\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"46\": {\r\n        \"name\": \"prueba  #46\",\r\n        \"symbol\": \"P\",\r\n        \"description\": \"prueba\",\r\n        \"seller_fee_basis_points\": 500,\r\n        \"image\": \"https://arweave.net/iF4uQ6Bn5oW7PsgyNO31Dlwf9nYO2bAz04VXHa2DWsU?ext=png\",\r\n        \"edition\": 46,\r\n        \"attributes\": [\r\n            {\r\n                \"trait_type\": \"Background\",\r\n                \"value\": \"Trippy wall\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Skin\",\r\n                \"value\": \"Alien\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Eyes\",\r\n                \"value\": \"Heart\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Mouth\",\r\n                \"value\": \"Radioactive\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Special\",\r\n                \"value\": \"Fire demon\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Head\",\r\n                \"value\": \"Island hat\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Clothing\",\r\n                \"value\": \"Sad vibes Tshirt\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Accesory\",\r\n                \"value\": \"Diamond\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Wild Friend\",\r\n                \"value\": \"666 jet\"\r\n            }\r\n        ],\r\n        \"properties\": {\r\n            \"files\": [\r\n                {\r\n                    \"uri\": \"https://arweave.net/iF4uQ6Bn5oW7PsgyNO31Dlwf9nYO2bAz04VXHa2DWsU?ext=png\",\r\n                    \"type\": \"image/png\"\r\n                }\r\n            ],\r\n            \"category\": \"image\",\r\n            \"creators\": [\r\n                {\r\n                    \"address\": \"CibhvTfoCj8qamMrLGucbNUJjEYJmgC2sd4XDbUnjgM9\",\r\n                    \"share\": 100\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"52\": {\r\n        \"name\": \"prueba  #52\",\r\n        \"symbol\": \"P\",\r\n        \"description\": \"prueba\",\r\n        \"seller_fee_basis_points\": 500,\r\n        \"image\": \"https://arweave.net/tY3kd5GHbq6I6s7WDM2g_IdudLErfXaQHecKeDXGliM?ext=png\",\r\n        \"edition\": 52,\r\n        \"attributes\": [\r\n            {\r\n                \"trait_type\": \"Background\",\r\n                \"value\": \"Cloudy night\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Skin\",\r\n                \"value\": \"Duality\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Eyes\",\r\n                \"value\": \"Fire\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Mouth\",\r\n                \"value\": \"Demonic\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Special\",\r\n                \"value\": \"Ice sword\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Head\",\r\n                \"value\": \"Botanic hair\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Clothing\",\r\n                \"value\": \"666 Tshirt\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Accesory\",\r\n                \"value\": \"Triple hoops\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Wild Friend\",\r\n                \"value\": \"Toxic crystal angel\"\r\n            }\r\n        ],\r\n        \"properties\": {\r\n            \"files\": [\r\n                {\r\n                    \"uri\": \"https://arweave.net/tY3kd5GHbq6I6s7WDM2g_IdudLErfXaQHecKeDXGliM?ext=png\",\r\n                    \"type\": \"image/png\"\r\n                }\r\n            ],\r\n            \"category\": \"image\",\r\n            \"creators\": [\r\n                {\r\n                    \"address\": \"CibhvTfoCj8qamMrLGucbNUJjEYJmgC2sd4XDbUnjgM9\",\r\n                    \"share\": 100\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"56\": {\r\n        \"name\": \"prueba  #56\",\r\n        \"symbol\": \"P\",\r\n        \"description\": \"prueba\",\r\n        \"seller_fee_basis_points\": 500,\r\n        \"image\": \"https://arweave.net/3MPMKnUVmUIpwDxZdk8iMhARDsBOatJS_gqkwuaMXPQ?ext=png\",\r\n        \"edition\": 56,\r\n        \"attributes\": [\r\n            {\r\n                \"trait_type\": \"Background\",\r\n                \"value\": \"Night city\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Skin\",\r\n                \"value\": \"Cyborg\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Eyes\",\r\n                \"value\": \"Sky blue round glasses\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Mouth\",\r\n                \"value\": \"Golden tooth\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Special\",\r\n                \"value\": \"Crystal fairy\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Head\",\r\n                \"value\": \"Fire hair\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Clothing\",\r\n                \"value\": \"Alien overall\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Accesory\",\r\n                \"value\": \"Emerald\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Wild Friend\",\r\n                \"value\": \"Undead smoke\"\r\n            }\r\n        ],\r\n        \"properties\": {\r\n            \"files\": [\r\n                {\r\n                    \"uri\": \"https://arweave.net/3MPMKnUVmUIpwDxZdk8iMhARDsBOatJS_gqkwuaMXPQ?ext=png\",\r\n                    \"type\": \"image/png\"\r\n                }\r\n            ],\r\n            \"category\": \"image\",\r\n            \"creators\": [\r\n                {\r\n                    \"address\": \"CibhvTfoCj8qamMrLGucbNUJjEYJmgC2sd4XDbUnjgM9\",\r\n                    \"share\": 100\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"57\": {\r\n        \"name\": \"prueba  #57\",\r\n        \"symbol\": \"P\",\r\n        \"description\": \"prueba\",\r\n        \"seller_fee_basis_points\": 500,\r\n        \"image\": \"https://arweave.net/TlugHMEziKFCY4XbIwK8QC1gNtlXYuvXIKR2ACAbQjk?ext=png\",\r\n        \"edition\": 57,\r\n        \"attributes\": [\r\n            {\r\n                \"trait_type\": \"Background\",\r\n                \"value\": \"Sunset\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Skin\",\r\n                \"value\": \"Duality\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Eyes\",\r\n                \"value\": \"Candy\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Mouth\",\r\n                \"value\": \"Disco fangs\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Special\",\r\n                \"value\": \"Bubblegum demon\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Head\",\r\n                \"value\": \"Green horned mullet\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Clothing\",\r\n                \"value\": \"Iris sweater\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Accesory\",\r\n                \"value\": \"Leaf\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Wild Friend\",\r\n                \"value\": \"F4ck love\"\r\n            }\r\n        ],\r\n        \"properties\": {\r\n            \"files\": [\r\n                {\r\n                    \"uri\": \"https://arweave.net/TlugHMEziKFCY4XbIwK8QC1gNtlXYuvXIKR2ACAbQjk?ext=png\",\r\n                    \"type\": \"image/png\"\r\n                }\r\n            ],\r\n            \"category\": \"image\",\r\n            \"creators\": [\r\n                {\r\n                    \"address\": \"CibhvTfoCj8qamMrLGucbNUJjEYJmgC2sd4XDbUnjgM9\",\r\n                    \"share\": 100\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"60\": {\r\n        \"name\": \"prueba  #60\",\r\n        \"symbol\": \"P\",\r\n        \"description\": \"prueba\",\r\n        \"seller_fee_basis_points\": 500,\r\n        \"image\": \"https://arweave.net/qsLKVCzEXImmt2zvvpp2pmSiXTjmq9N0AdxYSZgZ0Bg?ext=png\",\r\n        \"edition\": 60,\r\n        \"attributes\": [\r\n            {\r\n                \"trait_type\": \"Background\",\r\n                \"value\": \"Rose\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Skin\",\r\n                \"value\": \"Cyborg\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Eyes\",\r\n                \"value\": \"Scientist glasses\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Mouth\",\r\n                \"value\": \"Mutant\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Special\",\r\n                \"value\": \"Crystal turtle\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Head\",\r\n                \"value\": \"Yes cap\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Clothing\",\r\n                \"value\": \"Smile Tshirt\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Accesory\",\r\n                \"value\": \"Tattoo\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Wild Friend\",\r\n                \"value\": \"Lvl 1 UFO\"\r\n            }\r\n        ],\r\n        \"properties\": {\r\n            \"files\": [\r\n                {\r\n                    \"uri\": \"https://arweave.net/qsLKVCzEXImmt2zvvpp2pmSiXTjmq9N0AdxYSZgZ0Bg?ext=png\",\r\n                    \"type\": \"image/png\"\r\n                }\r\n            ],\r\n            \"category\": \"image\",\r\n            \"creators\": [\r\n                {\r\n                    \"address\": \"CibhvTfoCj8qamMrLGucbNUJjEYJmgC2sd4XDbUnjgM9\",\r\n                    \"share\": 100\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"61\": {\r\n        \"name\": \"prueba  #61\",\r\n        \"symbol\": \"P\",\r\n        \"description\": \"prueba\",\r\n        \"seller_fee_basis_points\": 500,\r\n        \"image\": \"https://arweave.net/XA_fkwTd_ud36184enrfGs1-yVEqmuM79mQgUhD1l3Q?ext=png\",\r\n        \"edition\": 61,\r\n        \"attributes\": [\r\n            {\r\n                \"trait_type\": \"Background\",\r\n                \"value\": \"Purple wall\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Skin\",\r\n                \"value\": \"Bubblegum\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Eyes\",\r\n                \"value\": \"Red\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Mouth\",\r\n                \"value\": \"Golden tooth\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Special\",\r\n                \"value\": \"Rainbow\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Head\",\r\n                \"value\": \"Dark cyan afro\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Clothing\",\r\n                \"value\": \"Sad vibes Tshirt\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Accesory\",\r\n                \"value\": \"Cloud\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Wild Friend\",\r\n                \"value\": \"Winged illuminati\"\r\n            }\r\n        ],\r\n        \"properties\": {\r\n            \"files\": [\r\n                {\r\n                    \"uri\": \"https://arweave.net/XA_fkwTd_ud36184enrfGs1-yVEqmuM79mQgUhD1l3Q?ext=png\",\r\n                    \"type\": \"image/png\"\r\n                }\r\n            ],\r\n            \"category\": \"image\",\r\n            \"creators\": [\r\n                {\r\n                    \"address\": \"CibhvTfoCj8qamMrLGucbNUJjEYJmgC2sd4XDbUnjgM9\",\r\n                    \"share\": 100\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"64\": {\r\n        \"name\": \"prueba  #64\",\r\n        \"symbol\": \"P\",\r\n        \"description\": \"prueba\",\r\n        \"seller_fee_basis_points\": 500,\r\n        \"image\": \"https://arweave.net/_06ou-OEhENpnxNb1CNGqdSB3V6_vEPabobC_RBrPLk?ext=png\",\r\n        \"edition\": 64,\r\n        \"attributes\": [\r\n            {\r\n                \"trait_type\": \"Background\",\r\n                \"value\": \"Green wall\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Skin\",\r\n                \"value\": \"Camel\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Eyes\",\r\n                \"value\": \"3D glasses\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Mouth\",\r\n                \"value\": \"Bubblegum\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Special\",\r\n                \"value\": \"Thunder mushroom\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Head\",\r\n                \"value\": \"Meow pink mullet\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Clothing\",\r\n                \"value\": \"Orange sweater\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Accesory\",\r\n                \"value\": \"Smiley\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Wild Friend\",\r\n                \"value\": \"Moonligth spirit\"\r\n            }\r\n        ],\r\n        \"properties\": {\r\n            \"files\": [\r\n                {\r\n                    \"uri\": \"https://arweave.net/_06ou-OEhENpnxNb1CNGqdSB3V6_vEPabobC_RBrPLk?ext=png\",\r\n                    \"type\": \"image/png\"\r\n                }\r\n            ],\r\n            \"category\": \"image\",\r\n            \"creators\": [\r\n                {\r\n                    \"address\": \"CibhvTfoCj8qamMrLGucbNUJjEYJmgC2sd4XDbUnjgM9\",\r\n                    \"share\": 100\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"65\": {\r\n        \"name\": \"prueba  #65\",\r\n        \"symbol\": \"P\",\r\n        \"description\": \"prueba\",\r\n        \"seller_fee_basis_points\": 500,\r\n        \"image\": \"https://arweave.net/uRANfgrBmqG6KxKOPusuT7VwZkspuPzFheABSc9lWqs?ext=png\",\r\n        \"edition\": 65,\r\n        \"attributes\": [\r\n            {\r\n                \"trait_type\": \"Background\",\r\n                \"value\": \"Coral\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Skin\",\r\n                \"value\": \"Latte\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Eyes\",\r\n                \"value\": \"Skull patch\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Mouth\",\r\n                \"value\": \"Pink mask\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Special\",\r\n                \"value\": \"Bubblegum ghost\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Head\",\r\n                \"value\": \"Bubblegum astronaut helmet\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Clothing\",\r\n                \"value\": \"Duality shirt\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Accesory\",\r\n                \"value\": \"Leaf\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Wild Friend\",\r\n                \"value\": \"Demon egg\"\r\n            }\r\n        ],\r\n        \"properties\": {\r\n            \"files\": [\r\n                {\r\n                    \"uri\": \"https://arweave.net/uRANfgrBmqG6KxKOPusuT7VwZkspuPzFheABSc9lWqs?ext=png\",\r\n                    \"type\": \"image/png\"\r\n                }\r\n            ],\r\n            \"category\": \"image\",\r\n            \"creators\": [\r\n                {\r\n                    \"address\": \"CibhvTfoCj8qamMrLGucbNUJjEYJmgC2sd4XDbUnjgM9\",\r\n                    \"share\": 100\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"68\": {\r\n        \"name\": \"prueba  #68\",\r\n        \"symbol\": \"P\",\r\n        \"description\": \"prueba\",\r\n        \"seller_fee_basis_points\": 500,\r\n        \"image\": \"https://arweave.net/O-Ee4-kfOFlUof3oCg5LcIjGJDgM50F3nU8Y79H5L-o?ext=png\",\r\n        \"edition\": 68,\r\n        \"attributes\": [\r\n            {\r\n                \"trait_type\": \"Background\",\r\n                \"value\": \"Green wall\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Skin\",\r\n                \"value\": \"Alien\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Eyes\",\r\n                \"value\": \"Gray eyes\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Mouth\",\r\n                \"value\": \"Evil\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Special\",\r\n                \"value\": \"Demon wings\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Head\",\r\n                \"value\": \"Stylish hat\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Clothing\",\r\n                \"value\": \"Duality shirt\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Accesory\",\r\n                \"value\": \"Smiley\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Wild Friend\",\r\n                \"value\": \"Crystal angel\"\r\n            }\r\n        ],\r\n        \"properties\": {\r\n            \"files\": [\r\n                {\r\n                    \"uri\": \"https://arweave.net/O-Ee4-kfOFlUof3oCg5LcIjGJDgM50F3nU8Y79H5L-o?ext=png\",\r\n                    \"type\": \"image/png\"\r\n                }\r\n            ],\r\n            \"category\": \"image\",\r\n            \"creators\": [\r\n                {\r\n                    \"address\": \"CibhvTfoCj8qamMrLGucbNUJjEYJmgC2sd4XDbUnjgM9\",\r\n                    \"share\": 100\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"72\": {\r\n        \"name\": \"prueba  #72\",\r\n        \"symbol\": \"P\",\r\n        \"description\": \"prueba\",\r\n        \"seller_fee_basis_points\": 500,\r\n        \"image\": \"https://arweave.net/h46RZLR_4YwIQyFtThdE0M1IHK_HDbWZ1h41PZ-Q6eE?ext=png\",\r\n        \"edition\": 72,\r\n        \"attributes\": [\r\n            {\r\n                \"trait_type\": \"Background\",\r\n                \"value\": \"Twister\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Skin\",\r\n                \"value\": \"Bubblegum\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Eyes\",\r\n                \"value\": \"Sky blue\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Mouth\",\r\n                \"value\": \"Angry\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Special\",\r\n                \"value\": \"Crystal fairy\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Head\",\r\n                \"value\": \"Demon astronaut helmet\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Clothing\",\r\n                \"value\": \"Cyborg arm\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Accesory\",\r\n                \"value\": \"Hippie medal\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Wild Friend\",\r\n                \"value\": \"Demon egg\"\r\n            }\r\n        ],\r\n        \"properties\": {\r\n            \"files\": [\r\n                {\r\n                    \"uri\": \"https://arweave.net/h46RZLR_4YwIQyFtThdE0M1IHK_HDbWZ1h41PZ-Q6eE?ext=png\",\r\n                    \"type\": \"image/png\"\r\n                }\r\n            ],\r\n            \"category\": \"image\",\r\n            \"creators\": [\r\n                {\r\n                    \"address\": \"CibhvTfoCj8qamMrLGucbNUJjEYJmgC2sd4XDbUnjgM9\",\r\n                    \"share\": 100\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"73\": {\r\n        \"name\": \"prueba  #73\",\r\n        \"symbol\": \"P\",\r\n        \"description\": \"prueba\",\r\n        \"seller_fee_basis_points\": 500,\r\n        \"image\": \"https://arweave.net/vJxSViLhiDCRizAYbIofwKO4yxHYDvjUI_R3_6_QuPc?ext=png\",\r\n        \"edition\": 73,\r\n        \"attributes\": [\r\n            {\r\n                \"trait_type\": \"Background\",\r\n                \"value\": \"Ocean\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Skin\",\r\n                \"value\": \"Vanilla\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Eyes\",\r\n                \"value\": \"Iluminati\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Mouth\",\r\n                \"value\": \"Demonic\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Special\",\r\n                \"value\": \"Fire spirit\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Head\",\r\n                \"value\": \"B cap\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Clothing\",\r\n                \"value\": \"Orange sweater\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Accesory\",\r\n                \"value\": \"Scar\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Wild Friend\",\r\n                \"value\": \"Devil flying eye\"\r\n            }\r\n        ],\r\n        \"properties\": {\r\n            \"files\": [\r\n                {\r\n                    \"uri\": \"https://arweave.net/vJxSViLhiDCRizAYbIofwKO4yxHYDvjUI_R3_6_QuPc?ext=png\",\r\n                    \"type\": \"image/png\"\r\n                }\r\n            ],\r\n            \"category\": \"image\",\r\n            \"creators\": [\r\n                {\r\n                    \"address\": \"CibhvTfoCj8qamMrLGucbNUJjEYJmgC2sd4XDbUnjgM9\",\r\n                    \"share\": 100\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"76\": {\r\n        \"name\": \"prueba  #76\",\r\n        \"symbol\": \"P\",\r\n        \"description\": \"prueba\",\r\n        \"seller_fee_basis_points\": 500,\r\n        \"image\": \"https://arweave.net/SAII-7EQXZILhhthl2V5oRV54MN3-lFVGsjbuzsYNSg?ext=png\",\r\n        \"edition\": 76,\r\n        \"attributes\": [\r\n            {\r\n                \"trait_type\": \"Background\",\r\n                \"value\": \"Night city\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Skin\",\r\n                \"value\": \"Bubblegum\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Eyes\",\r\n                \"value\": \"Sky blue\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Mouth\",\r\n                \"value\": \"Cyborg\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Special\",\r\n                \"value\": \"Crystal angel\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Head\",\r\n                \"value\": \"Mouse hat\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Clothing\",\r\n                \"value\": \"Blue jacket\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Accesory\",\r\n                \"value\": \"Golden eye\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Wild Friend\",\r\n                \"value\": \"Demon eye\"\r\n            }\r\n        ],\r\n        \"properties\": {\r\n            \"files\": [\r\n                {\r\n                    \"uri\": \"https://arweave.net/SAII-7EQXZILhhthl2V5oRV54MN3-lFVGsjbuzsYNSg?ext=png\",\r\n                    \"type\": \"image/png\"\r\n                }\r\n            ],\r\n            \"category\": \"image\",\r\n            \"creators\": [\r\n                {\r\n                    \"address\": \"CibhvTfoCj8qamMrLGucbNUJjEYJmgC2sd4XDbUnjgM9\",\r\n                    \"share\": 100\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"88\": {\r\n        \"name\": \"prueba  #88\",\r\n        \"symbol\": \"P\",\r\n        \"description\": \"prueba\",\r\n        \"seller_fee_basis_points\": 500,\r\n        \"image\": \"https://arweave.net/YZyEDd5L0_rEyD9QD8FEXRgwQs_07_lIrhC1BT4jxJk?ext=png\",\r\n        \"edition\": 88,\r\n        \"attributes\": [\r\n            {\r\n                \"trait_type\": \"Background\",\r\n                \"value\": \"Psychodelic upward\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Skin\",\r\n                \"value\": \"Bubblegum\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Eyes\",\r\n                \"value\": \"Candy\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Mouth\",\r\n                \"value\": \"Cyborg\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Special\",\r\n                \"value\": \"Thunder mushroom\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Head\",\r\n                \"value\": \"Electric hair\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Clothing\",\r\n                \"value\": \"Galaxity jacket\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Accesory\",\r\n                \"value\": \"Golden eye\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Wild Friend\",\r\n                \"value\": \"Lvl 2 UFO\"\r\n            }\r\n        ],\r\n        \"properties\": {\r\n            \"files\": [\r\n                {\r\n                    \"uri\": \"https://arweave.net/YZyEDd5L0_rEyD9QD8FEXRgwQs_07_lIrhC1BT4jxJk?ext=png\",\r\n                    \"type\": \"image/png\"\r\n                }\r\n            ],\r\n            \"category\": \"image\",\r\n            \"creators\": [\r\n                {\r\n                    \"address\": \"CibhvTfoCj8qamMrLGucbNUJjEYJmgC2sd4XDbUnjgM9\",\r\n                    \"share\": 100\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"89\": {\r\n        \"name\": \"prueba  #89\",\r\n        \"symbol\": \"P\",\r\n        \"description\": \"prueba\",\r\n        \"seller_fee_basis_points\": 500,\r\n        \"image\": \"https://arweave.net/GertzTEwS-Z5qOS_WiNaaXl8mwM1kDpIki3hpO8T_nE?ext=png\",\r\n        \"edition\": 89,\r\n        \"attributes\": [\r\n            {\r\n                \"trait_type\": \"Background\",\r\n                \"value\": \"Dark sunset\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Skin\",\r\n                \"value\": \"Vanilla\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Eyes\",\r\n                \"value\": \"Purple\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Mouth\",\r\n                \"value\": \"Smoking\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Special\",\r\n                \"value\": \"Bubblegum ghost\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Head\",\r\n                \"value\": \"Electric hair\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Clothing\",\r\n                \"value\": \"Yellow jacket\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Accesory\",\r\n                \"value\": \"Hippie medal\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Wild Friend\",\r\n                \"value\": \"Undead smoke\"\r\n            }\r\n        ],\r\n        \"properties\": {\r\n            \"files\": [\r\n                {\r\n                    \"uri\": \"https://arweave.net/GertzTEwS-Z5qOS_WiNaaXl8mwM1kDpIki3hpO8T_nE?ext=png\",\r\n                    \"type\": \"image/png\"\r\n                }\r\n            ],\r\n            \"category\": \"image\",\r\n            \"creators\": [\r\n                {\r\n                    \"address\": \"CibhvTfoCj8qamMrLGucbNUJjEYJmgC2sd4XDbUnjgM9\",\r\n                    \"share\": 100\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"90\": {\r\n        \"name\": \"prueba  #90\",\r\n        \"symbol\": \"P\",\r\n        \"description\": \"prueba\",\r\n        \"seller_fee_basis_points\": 500,\r\n        \"image\": \"https://arweave.net/t7mF55p8Ysl3lfcP8Bj_2LH09oABb9mQAt-jaODLiuM?ext=png\",\r\n        \"edition\": 90,\r\n        \"attributes\": [\r\n            {\r\n                \"trait_type\": \"Background\",\r\n                \"value\": \"Cyan\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Skin\",\r\n                \"value\": \"Bubblegum\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Eyes\",\r\n                \"value\": \"Purple\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Mouth\",\r\n                \"value\": \"Yelling\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Special\",\r\n                \"value\": \"Crystal fairy\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Head\",\r\n                \"value\": \"B cap\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Clothing\",\r\n                \"value\": \"Alien overall\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Accesory\",\r\n                \"value\": \"Illuminati\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Wild Friend\",\r\n                \"value\": \"Blue demon\"\r\n            }\r\n        ],\r\n        \"properties\": {\r\n            \"files\": [\r\n                {\r\n                    \"uri\": \"https://arweave.net/t7mF55p8Ysl3lfcP8Bj_2LH09oABb9mQAt-jaODLiuM?ext=png\",\r\n                    \"type\": \"image/png\"\r\n                }\r\n            ],\r\n            \"category\": \"image\",\r\n            \"creators\": [\r\n                {\r\n                    \"address\": \"CibhvTfoCj8qamMrLGucbNUJjEYJmgC2sd4XDbUnjgM9\",\r\n                    \"share\": 100\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"91\": {\r\n        \"name\": \"prueba  #91\",\r\n        \"symbol\": \"P\",\r\n        \"description\": \"prueba\",\r\n        \"seller_fee_basis_points\": 500,\r\n        \"image\": \"https://arweave.net/bBB9aiA9D1yx_ZLysrzkWlBC-hwUgsMgwuKN3ghMrp0?ext=png\",\r\n        \"edition\": 91,\r\n        \"attributes\": [\r\n            {\r\n                \"trait_type\": \"Background\",\r\n                \"value\": \"Night city\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Skin\",\r\n                \"value\": \"Bubblegum\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Eyes\",\r\n                \"value\": \"Broken blue sunglasses\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Mouth\",\r\n                \"value\": \"Demonic\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Special\",\r\n                \"value\": \"Fire sword\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Head\",\r\n                \"value\": \"Meow yellow mullet\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Clothing\",\r\n                \"value\": \"Smile Tshirt\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Accesory\",\r\n                \"value\": \"Emerald\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Wild Friend\",\r\n                \"value\": \"Cryogenic hand\"\r\n            }\r\n        ],\r\n        \"properties\": {\r\n            \"files\": [\r\n                {\r\n                    \"uri\": \"https://arweave.net/bBB9aiA9D1yx_ZLysrzkWlBC-hwUgsMgwuKN3ghMrp0?ext=png\",\r\n                    \"type\": \"image/png\"\r\n                }\r\n            ],\r\n            \"category\": \"image\",\r\n            \"creators\": [\r\n                {\r\n                    \"address\": \"CibhvTfoCj8qamMrLGucbNUJjEYJmgC2sd4XDbUnjgM9\",\r\n                    \"share\": 100\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"92\": {\r\n        \"name\": \"prueba  #92\",\r\n        \"symbol\": \"P\",\r\n        \"description\": \"prueba\",\r\n        \"seller_fee_basis_points\": 500,\r\n        \"image\": \"https://arweave.net/t0yGAU1RPrjHoDl5KXVP6nXJ42T-B7g_Ol8ixmlXobo?ext=png\",\r\n        \"edition\": 92,\r\n        \"attributes\": [\r\n            {\r\n                \"trait_type\": \"Background\",\r\n                \"value\": \"Cloudy day\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Skin\",\r\n                \"value\": \"Duality\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Eyes\",\r\n                \"value\": \"Scientist glasses\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Mouth\",\r\n                \"value\": \"Serpent tongue\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Special\",\r\n                \"value\": \"Evil mushroom\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Head\",\r\n                \"value\": \"Dark cyan afro\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Clothing\",\r\n                \"value\": \"McWilds\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Accesory\",\r\n                \"value\": \"Cloud\"\r\n            },\r\n            {\r\n                \"trait_type\": \"Wild Friend\",\r\n                \"value\": \"Winged egg\"\r\n            }\r\n        ],\r\n        \"properties\": {\r\n            \"files\": [\r\n                {\r\n                    \"uri\": \"https://arweave.net/t0yGAU1RPrjHoDl5KXVP6nXJ42T-B7g_Ol8ixmlXobo?ext=png\",\r\n                    \"type\": \"image/png\"\r\n                }\r\n            ],\r\n            \"category\": \"image\",\r\n            \"creators\": [\r\n                {\r\n                    \"address\": \"CibhvTfoCj8qamMrLGucbNUJjEYJmgC2sd4XDbUnjgM9\",\r\n                    \"share\": 100\r\n                }\r\n            ]\r\n        }\r\n    }\r\n}\r\n\r\nexport default NFTINDEX","let DATATRAIT : any = {\r\n    \"Special\": {\r\n        \"Angel mushroom\": 0,\r\n        \"Angel wings\": 0,\r\n        \"Angry muggy\": 1,\r\n        \"Bubblegum demon\": 1,\r\n        \"Bubblegum ghost\": 4,\r\n        \"Bubblegum spirit\": 1,\r\n        \"Classic ghost\": 1,\r\n        \"Crystal angel\": 1,\r\n        \"Crystal fairy\": 3,\r\n        \"Crystal turtle\": 2,\r\n        \"Demon wings\": 2,\r\n        \"Evil mushroom\": 1,\r\n        \"Evil rainbow\": 1,\r\n        \"Fairy wings\": 1,\r\n        \"Fire demon\": 1,\r\n        \"Fire spirit\": 1,\r\n        \"Fire sword\": 1,\r\n        \"Ghost mushroom\": 0,\r\n        \"Ice sword\": 2,\r\n        \"Maniac muggy\": 0,\r\n        \"Mint ghost\": 0,\r\n        \"Octopus\": 0,\r\n        \"Pink crystal fairy\": 0,\r\n        \"Pirate flag\": 0,\r\n        \"Rainbow\": 1,\r\n        \"Red Mushroom\": 0,\r\n        \"Rocket\": 0,\r\n        \"Scared muggy\": 1,\r\n        \"Thunder mushroom\": 2,\r\n        \"Toxic spirit\": 0,\r\n        \"Toxic sword\": 2\r\n    },\r\n    \"Head\": {\r\n        \"Dark cyan afro\": 2,\r\n        \"Electric afro\": 0,\r\n        \"Electric hair\": 2,\r\n        \"Meow yellow mullet\": 1,\r\n        \"Green punk hair\": 2,\r\n        \"Living hair\": 0,\r\n        \"Halo pink hair\": 1,\r\n        \"Chill hat\": 0,\r\n        \"Dark blue punk hair\": 0,\r\n        \"Sky blue mullet\": 0,\r\n        \"Astronaut helmet\": 0,\r\n        \"Mouse hat\": 2,\r\n        \"Meow pink mullet\": 1,\r\n        \"Island hat\": 2,\r\n        \"B cap\": 2,\r\n        \"Stylish hat\": 1,\r\n        \"Botanic helmet\": 0,\r\n        \"Flower hair\": 0,\r\n        \"Demon astronaut helmet\": 4,\r\n        \"Botanic hair\": 2,\r\n        \"Purple mullet\": 0,\r\n        \"Duality hair\": 1,\r\n        \"6 Hat\": 0,\r\n        \"Knife in the head\": 0,\r\n        \"Demon green head\": 0,\r\n        \"Fire hair\": 1,\r\n        \"Bubblegum astronaut helmet\": 2,\r\n        \"Green horned mullet\": 1,\r\n        \"Orange electric hair\": 1,\r\n        \"Yes cap\": 2\r\n    },\r\n    \"Clothing\": {\r\n        \"Trippy Tshirt\": 0,\r\n        \"Red space suit\": 0,\r\n        \"Coral tank top\": 0,\r\n        \"Orange space suit\": 0,\r\n        \"Locked heart Tshirt\": 0,\r\n        \"Alien overall\": 2,\r\n        \"Samurai kimono\": 1,\r\n        \"College jacket\": 0,\r\n        \"Bomber jacket\": 1,\r\n        \"Stylish jacket\": 0,\r\n        \"Iris sweater\": 1,\r\n        \"Galaxity jacket\": 1,\r\n        \"Disco shirt\": 0,\r\n        \"Broken heart\": 1,\r\n        \"Yellow jacket\": 4,\r\n        \"Ronin kimono\": 0,\r\n        \"666 Tshirt\": 1,\r\n        \"Biker jacket\": 0,\r\n        \"Tiger coat\": 0,\r\n        \"Duality shirt\": 4,\r\n        \"Trippy hoodie\": 0,\r\n        \"Superstar jacket\": 0,\r\n        \"Demon overall\": 0,\r\n        \"Money jacket\": 0,\r\n        \"Overcoat\": 0,\r\n        \"Leopard jacket\": 1,\r\n        \"McWilds\": 1,\r\n        \"Periwinkle tank top\": 0,\r\n        \"Wild Floyd Tshirt\": 0,\r\n        \"Orange sweater\": 2,\r\n        \"Green Hoodie\": 0,\r\n        \"Smile Tshirt\": 2,\r\n        \"Melon tank top\": 1,\r\n        \"Sad vibes Tshirt\": 2,\r\n        \"Blue jacket\": 2,\r\n        \"Lemon jacket\": 0,\r\n        \"Red coat\": 0,\r\n        \"Purple jacket\": 1,\r\n        \"Cool tank top\": 0,\r\n        \"Cyborg arm\": 2\r\n    },\r\n    \"Eyes\": {\r\n        \"Green bulging eye\": 0,\r\n        \"In love\": 0,\r\n        \"Mad scientist glasses\": 0,\r\n        \"Money\": 0,\r\n        \"Red round glasses\": 0,\r\n        \"Fire demon\": 1,\r\n        \"Purple\": 2,\r\n        \"Skull patch\": 1,\r\n        \"Scientist glasses\": 2,\r\n        \"Red sunglasses\": 0,\r\n        \"Candy\": 3,\r\n        \"Normal\": 1,\r\n        \"Cyan\": 0,\r\n        \"Iluminati\": 1,\r\n        \"Dizzy\": 0,\r\n        \"Blue bulging eyes\": 1,\r\n        \"Red\": 1,\r\n        \"Sky blue\": 2,\r\n        \"Heart\": 2,\r\n        \"Green & purple\": 0,\r\n        \"Brown\": 1,\r\n        \"Green bulging eyes\": 0,\r\n        \"Love & hate\": 0,\r\n        \"Broken blue sunglasses\": 1,\r\n        \"Pink\": 1,\r\n        \"Mixed\": 0,\r\n        \"3D glasses\": 1,\r\n        \"Red bulging eyes\": 3,\r\n        \"Cross\": 0,\r\n        \"Possessed\": 0,\r\n        \"Sky blue round glasses\": 3,\r\n        \"Heart patch\": 0,\r\n        \"Crystal blue\": 0,\r\n        \"Gray eyes\": 1,\r\n        \"Dark blue sunglasses\": 0,\r\n        \"Black bulging eyes\": 0,\r\n        \"Broken pink sunglasses\": 1,\r\n        \"Cyborg\": 0,\r\n        \"Fire\": 1,\r\n        \"Green\": 0\r\n    },\r\n    \"WildFriend\": {\r\n        \"Winged egg\": 1,\r\n        \"Crystal angel\": 1,\r\n        \"Ghost friend\": 0,\r\n        \"Demon hallo friend\": 0,\r\n        \"Cryogenic hand\": 1,\r\n        \"Smiley smartphone\": 0,\r\n        \"Zombie hand\": 1,\r\n        \"Undead smoke\": 2,\r\n        \"Lvl 1 UFO\": 1,\r\n        \"Fire crystal angel\": 1,\r\n        \"Green demon\": 0,\r\n        \"Demon eye\": 1,\r\n        \"Tree eyes demon\": 0,\r\n        \"Demon egg\": 3,\r\n        \"Bubblegum ghost\": 0,\r\n        \"Devil flying eye\": 3,\r\n        \"666 jet\": 1,\r\n        \"Angry octopus\": 0,\r\n        \"Starlight spirit\": 1,\r\n        \"Moonligth spirit\": 1,\r\n        \"Cap friend\": 1,\r\n        \"F4ck love\": 2,\r\n        \"Winged illuminati\": 3,\r\n        \"Mad smartphone\": 0,\r\n        \"Toxic crystal angel\": 1,\r\n        \"Red demon\": 0,\r\n        \"Blue demon\": 2,\r\n        \"Lvl 2 UFO\": 1,\r\n        \"Tropical friend\": 0,\r\n        \"Winged drop\": 2\r\n    },\r\n    \"Mouth\": {\r\n        \"Smiley fangs\": 0,\r\n        \"Serpent tongue\": 2,\r\n        \"Unimpressed\": 1,\r\n        \"Surprised\": 1,\r\n        \"Vampire\": 0,\r\n        \"Beast\": 1,\r\n        \"Golden fangs\": 0,\r\n        \"Golden tooth\": 2,\r\n        \"Smoking\": 2,\r\n        \"Yelling\": 1,\r\n        \"Radioactive\": 2,\r\n        \"Fire breath\": 0,\r\n        \"Angry\": 2,\r\n        \"Feared\": 0,\r\n        \"Hippie mask\": 0,\r\n        \"Drooling with love\": 1,\r\n        \"Evil\": 1,\r\n        \"Toxic mask\": 1,\r\n        \"Purple tongue\": 1,\r\n        \"Bubblegum\": 1,\r\n        \"Cyborg\": 4,\r\n        \"Mutant\": 1,\r\n        \"Pink mask\": 2,\r\n        \"Demonic\": 3,\r\n        \"Evil bubblegum\": 0,\r\n        \"Disco fangs\": 1,\r\n        \"Scarecrow\": 0,\r\n        \"Amazed\": 0,\r\n        \"Tongue\": 0,\r\n        \"Normal\": 0\r\n    },\r\n    \"Accesory\": {\r\n        \"Smiley\": 2,\r\n        \"Emerald\": 2,\r\n        \"Fire\": 1,\r\n        \"Scar\": 1,\r\n        \"Lunar\": 1,\r\n        \"Hippie medal\": 3,\r\n        \"Illuminati\": 1,\r\n        \"Diamond\": 3,\r\n        \"Tattoo\": 1,\r\n        \"Band aid\": 3,\r\n        \"Yin yang\": 1,\r\n        \"Triple hoops\": 2,\r\n        \"Double hoops\": 0,\r\n        \"Thunder\": 0,\r\n        \"Golden eye\": 2,\r\n        \"Shuriken\": 0,\r\n        \"Cloud\": 2,\r\n        \"Love and thunder\": 2,\r\n        \"Star\": 1,\r\n        \"Leaf\": 2\r\n    },\r\n    \"Background\": {\r\n        \"Green wall\": 2,\r\n        \"Skyblue\": 0,\r\n        \"Space\": 0,\r\n        \"Cloudy day\": 1,\r\n        \"Transdimensional\": 2,\r\n        \"Orange\": 0,\r\n        \"High mountains\": 0,\r\n        \"Ocean\": 1,\r\n        \"Solana\": 1,\r\n        \"Dark sunset\": 1,\r\n        \"Psychodelic downward\": 1,\r\n        \"Rose\": 1,\r\n        \"Sunset\": 1,\r\n        \"Cloudy night\": 2,\r\n        \"Twister\": 3,\r\n        \"Acid pink\": 1,\r\n        \"Coral\": 1,\r\n        \"Night city\": 4,\r\n        \"Wild beach\": 0,\r\n        \"Trippy wall\": 4,\r\n        \"Thunder storm\": 0,\r\n        \"Purple wall\": 2,\r\n        \"Psychodelic upward\": 1,\r\n        \"Jungle\": 0,\r\n        \"Magenta\": 0,\r\n        \"Cyan\": 1\r\n    },\r\n    \"Skin\": {\r\n        \"Duality\": 5,\r\n        \"Zombie\": 3,\r\n        \"Invisible\": 1,\r\n        \"Bubblegum\": 6,\r\n        \"Camel\": 3,\r\n        \"Latte\": 2,\r\n        \"Caramel\": 0,\r\n        \"Alien\": 4,\r\n        \"Vanilla\": 4,\r\n        \"Cyborg\": 2\r\n    }\r\n}\r\n\r\nexport default DATATRAIT;","export interface NFTRarity {\r\n    name: string;\r\n    image: string;\r\n    attributes: any;\r\n    prevIndex: number;\r\n}\r\n\r\nexport interface NFTdata {\r\n    name: string;\r\n    image: string;\r\n    attributes: any;\r\n    prevIndex: number;\r\n}\r\n\r\nexport interface NFTRarityValue {\r\n    BackgroundRarity: number;\r\n    SkinRarity: number;\r\n    EyesRarity: number;\r\n    MouthRarity: number;\r\n    SpecialRarity: number;\r\n    HeadRarity: number;\r\n    ClothingRarity: number;\r\n    AccesoryRarity: number;\r\n    WildFriendRarity: number;\r\n}\r\n\r\nexport interface NFTRarityScore {\r\n    BackgroundScore: number;\r\n    SkinScore: number;\r\n    EyesScore: number;\r\n    MouthScore: number;\r\n    SpecialScore: number;\r\n    HeadScore: number;\r\n    ClothingScore: number;\r\n    AccesoryScore: number;\r\n    WildFriendScore: number;\r\n}\r\n\r\nexport const trait = {\r\n    Background: 0,\r\n    Skin: 1,\r\n    Eyes: 2,\r\n    Mouth: 3,\r\n    Special: 4,\r\n    Head: 5,\r\n    Clothing: 6,\r\n    Accesory: 7,\r\n    WildFriend: 8\r\n}\r\n\r\nexport const traitCuantity:any = {\r\n    \"Background\": 26,\r\n    \"Skin\": 10,\r\n    \"Eyes\": 40,\r\n    \"Mouth\": 30,\r\n    \"Special\": 31,\r\n    \"Head\": 30,\r\n    \"Clothing\": 40,\r\n    \"Accesory\": 20,\r\n    \"WildFriend\": 30\r\n}\r\n\r\nexport const NFTRarityValueObj:any = {\r\n    \"Background\": 0,\r\n    \"Skin\": 0,\r\n    \"Eyes\": 0,\r\n    \"Mouth\": 0,\r\n    \"Special\": 0,\r\n    \"Head\": 0,\r\n    \"Clothing\": 0,\r\n    \"Accesory\": 0,\r\n    \"WildFriend\": 0\r\n}","import { Connection, PublicKey } from '@solana/web3.js';\r\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token';\r\nimport axios from 'axios';\r\nimport * as Metadata from \"@metaplex-foundation/mpl-token-metadata\";\r\nimport { getCandyMachineCreator, getMintAddresses } from './fetchholders';\r\nimport { getNFTMetadata } from './NFTget';\r\nimport DATA from '../constants/data';\r\nimport * as fs from 'fs';\r\nimport MINTS from '../constants/mints';\r\nimport NFTINDEX from '../constants/nftindex';\r\nimport DATATRAIT from '../constants/dataafter';\r\nimport { NFTdata, NFTRarity, NFTRarityScore, NFTRarityValue, NFTRarityValueObj, trait, traitCuantity } from '../constants/interfaces';\r\n\r\nasync function getAllMints(\r\n    conn: Connection,\r\n) {\r\n    const candyMachineCreator = await getCandyMachineCreator(new PublicKey(\"GzwVNoqEUTUUkcXCxbLNDyGDv8Ns1cExa61h4nNDcVcz\"));\r\n    let mints = await getMintAddresses(candyMachineCreator[0], conn);\r\n    return mints;\r\n}\r\n\r\nexport async function addNFTValue(\r\n    conn: Connection,\r\n) {\r\n    let arrMints = await getAllMints(conn)\r\n    let dataTraits = DATA;\r\n\r\n    console.log(arrMints)\r\n    //let data = await getNFTMetadata(arrMints[0], conn)\r\n    arrMints.forEach(async (mint) => {\r\n        let data = await getNFTMetadata(mint, conn)\r\n        for (let x = 0; x < data?.externalMetadata.attributes.length; x++) {\r\n            let trait_type = await data?.externalMetadata.attributes[x].trait_type\r\n            let value = await data?.externalMetadata.attributes[x].value\r\n            if (trait_type == 'Wild Friend') {\r\n                trait_type = 'WildFriend'\r\n            }\r\n            dataTraits[trait_type][value] += 1\r\n        }\r\n    });\r\n}\r\n\r\nexport async function addNFTindex(\r\n    conn: Connection,\r\n) {\r\n    let arrMints = MINTS;\r\n    let objects: any = []\r\n    let count = 0\r\n\r\n    await new Promise((resolve, reject) => {\r\n        arrMints.forEach(async (mint) => {\r\n            try {\r\n                let data = await getNFTMetadata(mint, conn)\r\n                let externalData = await data?.externalMetadata\r\n                objects.push(externalData)\r\n            } catch (error) {\r\n                console.log(error)\r\n            } finally {\r\n                count += 1\r\n                if (count == arrMints.length) {\r\n                    resolve(objects)\r\n                }\r\n            }\r\n        })\r\n    })\r\n\r\n    let dic: any = {}\r\n\r\n    for (let data of objects) {\r\n        let number = data['name'].split('#')[1]\r\n        dic[number] = data\r\n    }\r\n\r\n    console.log(dic)\r\n}\r\n\r\nexport async function getNFTRarity(\r\n    index: number = 90,\r\n): Promise<NFTRarityValue | undefined> {\r\n    let mintData = NFTINDEX;\r\n    let dataTrait = DATATRAIT\r\n\r\n    let attributes = mintData[index.toString()]['attributes']\r\n\r\n    let obj = NFTRarityValueObj\r\n\r\n    for (let x = 0; x < attributes.length; x++) {\r\n        let trait_value = attributes[x]['trait_type']\r\n        let value = attributes[x]['value']\r\n        let rarity = \"0\"\r\n        if (trait_value != \"Wild Friend\") {\r\n            rarity = (dataTrait[trait_value][value] * 100 / 30).toFixed(2);\r\n            obj[trait_value] = rarity;\r\n        }\r\n        else {\r\n            console.log(dataTrait[\"WildFriend\"][value])\r\n            rarity = (dataTrait[\"WildFriend\"][value] * 100 / 30).toFixed(2);\r\n            obj[\"WildFriend\"] = rarity;\r\n        }\r\n    }\r\n\r\n    return {\r\n        BackgroundRarity: obj[\"Background\"],\r\n        SkinRarity: obj[\"Skin\"],\r\n        EyesRarity: obj[\"Eyes\"],\r\n        MouthRarity: obj[\"Mouth\"],\r\n        SpecialRarity: obj[\"Special\"],\r\n        HeadRarity: obj[\"Head\"],\r\n        ClothingRarity: obj[\"Clothing\"],\r\n        AccesoryRarity: obj[\"Accesory\"],\r\n        WildFriendRarity: obj[\"WildFriend\"]\r\n    }\r\n}\r\n\r\nexport async function getNFTRScore(\r\n    index: number = 90,\r\n): Promise<NFTRarityScore | undefined> {\r\n    let mintData = NFTINDEX;\r\n    let dataTrait = DATATRAIT\r\n\r\n    let attributes = mintData[index.toString()]['attributes']\r\n\r\n    let obj = NFTRarityValueObj\r\n\r\n    for (let x = 0; x < attributes.length; x++) {\r\n        let trait_value = attributes[x]['trait_type']\r\n        let value = attributes[x]['value']\r\n        let score = \"0\"\r\n        if (trait_value != \"Wild Friend\") {\r\n            score = (dataTrait[trait_value][value] * 100 * traitCuantity[trait_value] / 30).toFixed(2);\r\n            obj[trait_value] = score;\r\n        }\r\n        else {\r\n            score = (dataTrait[\"WildFriend\"][value] * 100 * traitCuantity['WildFriend'] / 30).toFixed(2);\r\n            obj[\"WildFriend\"] = score;\r\n        }\r\n    }\r\n\r\n    return {\r\n        BackgroundScore: obj[\"Background\"],\r\n        SkinScore: obj[\"Skin\"],\r\n        EyesScore: obj[\"Eyes\"],\r\n        MouthScore: obj[\"Mouth\"],\r\n        SpecialScore: obj[\"Special\"],\r\n        HeadScore: obj[\"Head\"],\r\n        ClothingScore: obj[\"Clothing\"],\r\n        AccesoryScore: obj[\"Accesory\"],\r\n        WildFriendScore: obj[\"WildFriend\"]\r\n    }\r\n}\r\n\r\n\r\nexport async function getNFTImage(\r\n    index: number = 90\r\n): Promise<NFTdata | undefined> {\r\n    let mintData = NFTINDEX;\r\n\r\n    return {\r\n        name: mintData[index.toString()]['name'],\r\n        image: mintData[index.toString()]['image'],\r\n        attributes: mintData[index.toString()]['attributes'],\r\n        prevIndex: index\r\n    }\r\n}","import { useCallback, useEffect, useMemo, useState } from 'react';\r\n\r\nimport * as anchor from '@project-serum/anchor';\r\nimport { addNFTindex, getNFTImage, getNFTRarity, getNFTRScore } from '../utils/NFTmetadata';\r\nimport { trait } from '../constants/interfaces';\r\n\r\nexport interface TraitProps {\r\n    candyMachineId?: anchor.web3.PublicKey;\r\n    connection: anchor.web3.Connection;\r\n}\r\n\r\n\r\n\r\nconst Trait = (props: TraitProps) => {\r\n    const [name, setName] = useState<string>(\"\");\r\n    const [image, setImage] = useState<string>(\"\");\r\n    const [attributes, setAttributes] = useState<any>();\r\n    const [prevIndex, setPrevIndex] = useState<number>(90);\r\n\r\n    const [backgroundRarity,setBackgroundRarity] = useState<number>(0)\r\n    const [skinRarity,setSkinRarity] = useState<number>(0)\r\n    const [eyesRarity,setEyesRarity] = useState<number>(0)\r\n    const [mouthRarity,setMouthRarity] = useState<number>(0)\r\n    const [specialRarity,setSpecialRarity] = useState<number>(0)\r\n    const [headRarity,setHeadRarity] = useState<number>(0)\r\n    const [clothingRarity,setClothingRarity] = useState<number>(0)\r\n    const [accesoryRarity,setAccesoryRarity] = useState<number>(0)\r\n    const [wildFriendRarity,setWildFriendRarity] = useState<number>(0)\r\n\r\n    const [backgroundScore,setBackgroundScore] = useState<number>(0)\r\n    const [skinScore,setSkinScore] = useState<number>(0)\r\n    const [eyesScore,setEyesScore] = useState<number>(0)\r\n    const [mouthScore,setMouthScore] = useState<number>(0)\r\n    const [specialScore,setSpecialScore] = useState<number>(0)\r\n    const [headScore,setHeadScore] = useState<number>(0)\r\n    const [clothingScore,setClothingScore] = useState<number>(0)\r\n    const [accesoryScore,setAccesoryScore] = useState<number>(0)\r\n    const [wildFriendScore,setWildFriendScore] = useState<number>(0)\r\n\r\n    const [loadedData, setLoadedData] = useState<boolean>(false);\r\n    const [loadedRarity, setLoadedRarity] = useState<boolean>(false);\r\n    const [loadedScore, setLoadedScore] = useState<boolean>(false);\r\n\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    const onChangeHandler = (event: any) => {\r\n        setInputValue(event.target.value);\r\n    };\r\n\r\n    async function poblateData(index: number = 90) {\r\n        let response = await getNFTImage(index)\r\n        console.log(response)\r\n        //console.log(response?.attributes[trait.Background]['value'])\r\n        if (response) {\r\n            setName(response.name)\r\n            setImage(response.image)\r\n            setAttributes(response.attributes)\r\n            setPrevIndex(response.prevIndex)\r\n            setLoadedData(true)\r\n        }\r\n        else {\r\n            alert(\"Error\")\r\n        }\r\n    }\r\n    async function poblateRarity(index: number = 90) {\r\n        let response = await getNFTRarity(index);\r\n        if (response) {\r\n            setBackgroundRarity(response.BackgroundRarity)\r\n            setHeadRarity(response.HeadRarity)\r\n            setSkinRarity(response.SkinRarity)\r\n            setEyesRarity(response.EyesRarity)\r\n            setMouthRarity(response.MouthRarity)\r\n            setSpecialRarity(response.SpecialRarity)\r\n            setClothingRarity(response.ClothingRarity)\r\n            setAccesoryRarity(response.AccesoryRarity)\r\n            setWildFriendRarity(response.WildFriendRarity)\r\n\r\n            setLoadedRarity(true)\r\n        }\r\n        else {\r\n            alert(\"Error\")\r\n        }\r\n    }\r\n\r\n    async function poblateScore(index: number = 90) {\r\n        let response = await getNFTRScore(index);\r\n        if (response) {\r\n            setBackgroundScore(response.BackgroundScore)\r\n            setHeadScore(response.HeadScore)\r\n            setSkinScore(response.SkinScore)\r\n            setEyesScore(response.EyesScore)\r\n            setMouthScore(response.MouthScore)\r\n            setSpecialScore(response.SpecialScore)\r\n            setClothingScore(response.ClothingScore)\r\n            setAccesoryScore(response.AccesoryScore)\r\n            setWildFriendScore(response.WildFriendScore)\r\n\r\n            setLoadedScore(true)\r\n        }\r\n        else {\r\n            alert(\"Error\")\r\n        }\r\n    }\r\n\r\n    async function poblateGeneral(index: number = 90){\r\n        await poblateData(index)\r\n        await poblateRarity(index)\r\n        await poblateScore(index)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await poblateGeneral()\r\n        }\r\n\r\n        fetchData()\r\n    }, [])\r\n\r\n\r\n\r\n    async function searchNFT() {\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"traits-container\">\r\n            {(loadedData && loadedRarity && loadedScore) && (\r\n                <div className=\"row-traits\">\r\n                    <div className=\"left-traits\">\r\n                        <div className=\"display-image\">\r\n                            <img src={image} alt=\"nft image\" />\r\n                            <i onClick={() => {poblateGeneral(prevIndex - 1)}} className=\"uil uil-angle-left\"></i>\r\n                            <i onClick={() => {poblateGeneral(prevIndex + 1)}} className=\"uil uil-angle-right\"></i>\r\n                        </div>\r\n                        <div className=\"function-traits\">\r\n                            <div className=\"name-trait\">\r\n                                <h2>{name}</h2>\r\n                            </div>\r\n                            <div className=\"global-rarity\">\r\n                                <div className=\"rarity-rank\">\r\n                                    <p>Rarity Rank</p>\r\n                                    <h3>#0000</h3>\r\n                                </div>\r\n                                <div className=\"rarity-score\">\r\n                                    <p>Rarity Score</p>\r\n                                    <h3>0000</h3>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"query-traits\">\r\n                                <div className=\"query-up\">\r\n                                    <span onClick={()=> window.open(image, \"_blank\")}>IMAGE</span>\r\n                                    <span className='trait-magiceden'>VIEW ON MAGICEDEN</span>\r\n                                </div>\r\n                                <div className=\"query-down\">\r\n                                    <input onChange={onChangeHandler} type=\"text\" placeholder='Enter #' />\r\n                                    <span onClick={() => { poblateGeneral(parseInt(inputValue)) }}>GO</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"right-traits\">\r\n                        <div className=\"detail-traits\">\r\n                            <h1>RARITY STATS</h1>\r\n                            <div className=\"description-box\">\r\n                                <div className=\"description-left\">\r\n                                    <div className=\"trait-rarity\">\r\n                                        <div className=\"tr-up\">\r\n                                            <h4>Background</h4>\r\n                                            <p>{backgroundScore}</p>\r\n                                        </div>\r\n                                        <div className=\"tr-down\">\r\n                                            <p>{attributes[trait.Background]['value']}</p>\r\n                                            <p>{backgroundRarity}%</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"trait-rarity\">\r\n                                        <div className=\"tr-up\">\r\n                                            <h4>Skin</h4>\r\n                                            <p>{skinScore}</p>\r\n                                        </div>\r\n                                        <div className=\"tr-down\">\r\n                                            <p>{attributes[trait.Skin]['value']}</p>\r\n                                            <p>{skinRarity}%</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"trait-rarity\">\r\n                                        <div className=\"tr-up\">\r\n                                            <h4>Eyes</h4>\r\n                                            <p>{eyesScore}</p>\r\n                                        </div>\r\n                                        <div className=\"tr-down\">\r\n                                            <p>{attributes[trait.Eyes]['value']}</p>\r\n                                            <p>{eyesRarity}%</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"trait-rarity\">\r\n                                        <div className=\"tr-up\">\r\n                                            <h4>Mouth</h4>\r\n                                            <p>{mouthScore}</p>\r\n                                        </div>\r\n                                        <div className=\"tr-down\">\r\n                                            <p>{attributes[trait.Mouth]['value']}</p>\r\n                                            <p>{mouthRarity}%</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"trait-rarity\">\r\n                                        <div className=\"tr-up\">\r\n                                            <h4>Special</h4>\r\n                                            <p>{specialScore}</p>\r\n                                        </div>\r\n                                        <div className=\"tr-down\">\r\n                                            <p>{attributes[trait.Special]['value']}</p>\r\n                                            <p>{specialRarity}%</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"description-right\">\r\n                                    <div className=\"trait-rarity\">\r\n                                        <div className=\"tr-up\">\r\n                                            <h4>Head</h4>\r\n                                            <p>{headScore}</p>\r\n                                        </div>\r\n                                        <div className=\"tr-down\">\r\n                                            <p>{attributes[trait.Head]['value']}</p>\r\n                                            <p>{headRarity}%</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"trait-rarity\">\r\n                                        <div className=\"tr-up\">\r\n                                            <h4>Clothing</h4>\r\n                                            <p>{clothingScore}</p>\r\n                                        </div>\r\n                                        <div className=\"tr-down\">\r\n                                            <p>{attributes[trait.Clothing]['value']}</p>\r\n                                            <p>{clothingRarity}%</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"trait-rarity\">\r\n                                        <div className=\"tr-up\">\r\n                                            <h4>Accesory</h4>\r\n                                            <p>{accesoryScore}</p>\r\n                                        </div>\r\n                                        <div className=\"tr-down\">\r\n                                            <p>{attributes[trait.Accesory]['value']}</p>\r\n                                            <p>{accesoryRarity}%</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"trait-rarity\">\r\n                                        <div className=\"tr-up\">\r\n                                            <h4>Wild Friend</h4>\r\n                                            <p>{wildFriendScore}</p>\r\n                                        </div>\r\n                                        <div className=\"tr-down\">\r\n                                            <p>{attributes[trait.WildFriend]['value']}</p>\r\n                                            <p>{wildFriendRarity}%</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Trait;","import { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport * as anchor from '@project-serum/anchor';\r\n\r\nimport styled from 'styled-components';\r\nimport { Container, Snackbar } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {\r\n  Commitment,\r\n  Connection,\r\n  PublicKey,\r\n  Transaction,\r\n} from '@solana/web3.js';\r\nimport { useWallet } from '@solana/wallet-adapter-react';\r\nimport { WalletDialogButton } from '@solana/wallet-adapter-material-ui';\r\nimport {\r\n  awaitTransactionSignatureConfirmation,\r\n  CANDY_MACHINE_PROGRAM,\r\n  CandyMachineAccount,\r\n  createAccountsForMint,\r\n  getCandyMachineState,\r\n  getCollectionPDA,\r\n  mintOneToken,\r\n  SetupState,\r\n} from './candy-machine';\r\nimport { AlertState, formatNumber, getAtaForMint, toDate } from './utils';\r\nimport { MintCountdown } from './MintCountdown';\r\nimport { MintButton } from './MintButton';\r\nimport { GatewayProvider } from '@civic/solana-gateway-react';\r\nimport { sendTransaction } from './connection';\r\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\r\n\r\n\r\n\r\n/* DESDE ACA ES LO MODIFICADO */\r\nimport Trait from './components/trait';\r\n\r\n\r\nconst ConnectButton = styled(WalletDialogButton)`\r\n  width: 100%;\r\n  height: 60px;\r\n  margin-top: 10px;\r\n  margin-bottom: 5px;\r\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\r\n  color: white;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst MintContainer = styled.div``; // add your owns styles here\r\n\r\nexport interface HomeProps {\r\n  candyMachineId?: anchor.web3.PublicKey;\r\n  connection: anchor.web3.Connection;\r\n  txTimeout: number;\r\n  rpcHost: string;\r\n  network: WalletAdapterNetwork;\r\n}\r\n\r\nconst Home = (props: HomeProps) => {\r\n  const [isUserMinting, setIsUserMinting] = useState(false);\r\n  const [candyMachine, setCandyMachine] = useState<CandyMachineAccount>();\r\n  const [alertState, setAlertState] = useState<AlertState>({\r\n    open: false,\r\n    message: '',\r\n    severity: undefined,\r\n  });\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [endDate, setEndDate] = useState<Date>();\r\n  const [itemsRemaining, setItemsRemaining] = useState<number>();\r\n  const [isWhitelistUser, setIsWhitelistUser] = useState(false);\r\n  const [isPresale, setIsPresale] = useState(false);\r\n  const [isValidBalance, setIsValidBalance] = useState(false);\r\n  const [discountPrice, setDiscountPrice] = useState<anchor.BN>();\r\n  const [needTxnSplit, setNeedTxnSplit] = useState(true);\r\n  const [setupTxn, setSetupTxn] = useState<SetupState>();\r\n\r\n  const rpcUrl = props.rpcHost;\r\n  const wallet = useWallet();\r\n  const cluster = props.network;\r\n  const anchorWallet = useMemo(() => {\r\n    if (\r\n      !wallet ||\r\n      !wallet.publicKey ||\r\n      !wallet.signAllTransactions ||\r\n      !wallet.signTransaction\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    return {\r\n      publicKey: wallet.publicKey,\r\n      signAllTransactions: wallet.signAllTransactions,\r\n      signTransaction: wallet.signTransaction,\r\n    } as anchor.Wallet;\r\n  }, [wallet]);\r\n\r\n  const refreshCandyMachineState = useCallback(\r\n    async (commitment: Commitment = 'confirmed') => {\r\n      if (!anchorWallet) {\r\n        return;\r\n      }\r\n\r\n      const connection = new Connection(props.rpcHost, commitment);\r\n\r\n      if (props.candyMachineId) {\r\n        try {\r\n          const cndy = await getCandyMachineState(\r\n            anchorWallet,\r\n            props.candyMachineId,\r\n            connection,\r\n          );\r\n          let active =\r\n            cndy?.state.goLiveDate?.toNumber() < new Date().getTime() / 1000;\r\n          let presale = false;\r\n\r\n          // duplication of state to make sure we have the right values!\r\n          let isWLUser = false;\r\n          let userPrice = cndy.state.price;\r\n\r\n          // whitelist mint?\r\n          if (cndy?.state.whitelistMintSettings) {\r\n            // is it a presale mint?\r\n            if (\r\n              cndy.state.whitelistMintSettings.presale &&\r\n              (!cndy.state.goLiveDate ||\r\n                cndy.state.goLiveDate.toNumber() > new Date().getTime() / 1000)\r\n            ) {\r\n              presale = true;\r\n            }\r\n            // is there a discount?\r\n            if (cndy.state.whitelistMintSettings.discountPrice) {\r\n              setDiscountPrice(cndy.state.whitelistMintSettings.discountPrice);\r\n              userPrice = cndy.state.whitelistMintSettings.discountPrice;\r\n            } else {\r\n              setDiscountPrice(undefined);\r\n              // when presale=false and discountPrice=null, mint is restricted\r\n              // to whitelist users only\r\n              if (!cndy.state.whitelistMintSettings.presale) {\r\n                cndy.state.isWhitelistOnly = true;\r\n              }\r\n            }\r\n            // retrieves the whitelist token\r\n            const mint = new anchor.web3.PublicKey(\r\n              cndy.state.whitelistMintSettings.mint,\r\n            );\r\n            const token = (\r\n              await getAtaForMint(mint, anchorWallet.publicKey)\r\n            )[0];\r\n\r\n            try {\r\n              const balance = await connection.getTokenAccountBalance(token);\r\n              isWLUser = parseInt(balance.value.amount) > 0;\r\n              // only whitelist the user if the balance > 0\r\n              setIsWhitelistUser(isWLUser);\r\n\r\n              if (cndy.state.isWhitelistOnly) {\r\n                active = isWLUser && (presale || active);\r\n              }\r\n            } catch (e) {\r\n              setIsWhitelistUser(false);\r\n              // no whitelist user, no mint\r\n              if (cndy.state.isWhitelistOnly) {\r\n                active = false;\r\n              }\r\n              console.log(\r\n                'There was a problem fetching whitelist token balance',\r\n              );\r\n              console.log(e);\r\n            }\r\n          }\r\n          userPrice = isWLUser ? userPrice : cndy.state.price;\r\n\r\n          if (cndy?.state.tokenMint) {\r\n            // retrieves the SPL token\r\n            const mint = new anchor.web3.PublicKey(cndy.state.tokenMint);\r\n            const token = (\r\n              await getAtaForMint(mint, anchorWallet.publicKey)\r\n            )[0];\r\n            try {\r\n              const balance = await connection.getTokenAccountBalance(token);\r\n\r\n              const valid = new anchor.BN(balance.value.amount).gte(userPrice);\r\n\r\n              // only allow user to mint if token balance >  the user if the balance > 0\r\n              setIsValidBalance(valid);\r\n              active = active && valid;\r\n            } catch (e) {\r\n              setIsValidBalance(false);\r\n              active = false;\r\n              // no whitelist user, no mint\r\n              console.log('There was a problem fetching SPL token balance');\r\n              console.log(e);\r\n            }\r\n          } else {\r\n            const balance = new anchor.BN(\r\n              await connection.getBalance(anchorWallet.publicKey),\r\n            );\r\n            const valid = balance.gte(userPrice);\r\n            setIsValidBalance(valid);\r\n            active = active && valid;\r\n          }\r\n\r\n          // datetime to stop the mint?\r\n          if (cndy?.state.endSettings?.endSettingType.date) {\r\n            setEndDate(toDate(cndy.state.endSettings.number));\r\n            if (\r\n              cndy.state.endSettings.number.toNumber() <\r\n              new Date().getTime() / 1000\r\n            ) {\r\n              active = false;\r\n            }\r\n          }\r\n          // amount to stop the mint?\r\n          if (cndy?.state.endSettings?.endSettingType.amount) {\r\n            let limit = Math.min(\r\n              cndy.state.endSettings.number.toNumber(),\r\n              cndy.state.itemsAvailable,\r\n            );\r\n            if (cndy.state.itemsRedeemed < limit) {\r\n              setItemsRemaining(limit - cndy.state.itemsRedeemed);\r\n            } else {\r\n              setItemsRemaining(0);\r\n              cndy.state.isSoldOut = true;\r\n            }\r\n          } else {\r\n            setItemsRemaining(cndy.state.itemsRemaining);\r\n          }\r\n\r\n          if (cndy.state.isSoldOut) {\r\n            active = false;\r\n          }\r\n\r\n          const [collectionPDA] = await getCollectionPDA(props.candyMachineId);\r\n          const collectionPDAAccount = await connection.getAccountInfo(\r\n            collectionPDA,\r\n          );\r\n\r\n          setIsActive((cndy.state.isActive = active));\r\n          setIsPresale((cndy.state.isPresale = presale));\r\n          setCandyMachine(cndy);\r\n\r\n          const txnEstimate =\r\n            892 +\r\n            (!!collectionPDAAccount && cndy.state.retainAuthority ? 182 : 0) +\r\n            (cndy.state.tokenMint ? 66 : 0) +\r\n            (cndy.state.whitelistMintSettings ? 34 : 0) +\r\n            (cndy.state.whitelistMintSettings?.mode?.burnEveryTime ? 34 : 0) +\r\n            (cndy.state.gatekeeper ? 33 : 0) +\r\n            (cndy.state.gatekeeper?.expireOnUse ? 66 : 0);\r\n\r\n          setNeedTxnSplit(txnEstimate > 1230);\r\n        } catch (e) {\r\n          if (e instanceof Error) {\r\n            if (\r\n              e.message === `Account does not exist ${props.candyMachineId}`\r\n            ) {\r\n              setAlertState({\r\n                open: true,\r\n                message: `Couldn't fetch candy machine state from candy machine with address: ${props.candyMachineId}, using rpc: ${props.rpcHost}! You probably typed the REACT_APP_CANDY_MACHINE_ID value in wrong in your .env file, or you are using the wrong RPC!`,\r\n                severity: 'error',\r\n                hideDuration: null,\r\n              });\r\n            } else if (\r\n              e.message.startsWith('failed to get info about account')\r\n            ) {\r\n              setAlertState({\r\n                open: true,\r\n                message: `Couldn't fetch candy machine state with rpc: ${props.rpcHost}! This probably means you have an issue with the REACT_APP_SOLANA_RPC_HOST value in your .env file, or you are not using a custom RPC!`,\r\n                severity: 'error',\r\n                hideDuration: null,\r\n              });\r\n            }\r\n          } else {\r\n            setAlertState({\r\n              open: true,\r\n              message: `${e}`,\r\n              severity: 'error',\r\n              hideDuration: null,\r\n            });\r\n          }\r\n          console.log(e);\r\n        }\r\n      } else {\r\n        setAlertState({\r\n          open: true,\r\n          message: `Your REACT_APP_CANDY_MACHINE_ID value in the .env file doesn't look right! Make sure you enter it in as plain base-58 address!`,\r\n          severity: 'error',\r\n          hideDuration: null,\r\n        });\r\n      }\r\n    },\r\n    [anchorWallet, props.candyMachineId, props.rpcHost],\r\n  );\r\n\r\n  const onMint = async (\r\n    beforeTransactions: Transaction[] = [],\r\n    afterTransactions: Transaction[] = [],\r\n  ) => {\r\n    try {\r\n      setIsUserMinting(true);\r\n      document.getElementById('#identity')?.click();\r\n      if (wallet.connected && candyMachine?.program && wallet.publicKey) {\r\n        let setupMint: SetupState | undefined;\r\n        if (needTxnSplit && setupTxn === undefined) {\r\n          setAlertState({\r\n            open: true,\r\n            message: 'Please sign account setup transaction',\r\n            severity: 'info',\r\n          });\r\n          setupMint = await createAccountsForMint(\r\n            candyMachine,\r\n            wallet.publicKey,\r\n          );\r\n          let status: any = { err: true };\r\n          if (setupMint.transaction) {\r\n            status = await awaitTransactionSignatureConfirmation(\r\n              setupMint.transaction,\r\n              props.txTimeout,\r\n              props.connection,\r\n              true,\r\n            );\r\n          }\r\n          if (status && !status.err) {\r\n            setSetupTxn(setupMint);\r\n            setAlertState({\r\n              open: true,\r\n              message:\r\n                'Setup transaction succeeded! Please sign minting transaction',\r\n              severity: 'info',\r\n            });\r\n          } else {\r\n            setAlertState({\r\n              open: true,\r\n              message: 'Mint failed! Please try again!',\r\n              severity: 'error',\r\n            });\r\n            setIsUserMinting(false);\r\n            return;\r\n          }\r\n        } else {\r\n          setAlertState({\r\n            open: true,\r\n            message: 'Please sign minting transaction',\r\n            severity: 'info',\r\n          });\r\n        }\r\n\r\n        let mintResult = await mintOneToken(\r\n          candyMachine,\r\n          wallet.publicKey,\r\n          beforeTransactions,\r\n          afterTransactions,\r\n          setupMint ?? setupTxn,\r\n        );\r\n\r\n        let status: any = { err: true };\r\n        let metadataStatus = null;\r\n        if (mintResult) {\r\n          status = await awaitTransactionSignatureConfirmation(\r\n            mintResult.mintTxId,\r\n            props.txTimeout,\r\n            props.connection,\r\n            true,\r\n          );\r\n\r\n          metadataStatus =\r\n            await candyMachine.program.provider.connection.getAccountInfo(\r\n              mintResult.metadataKey,\r\n              'processed',\r\n            );\r\n          console.log('Metadata status: ', !!metadataStatus);\r\n        }\r\n\r\n        if (status && !status.err && metadataStatus) {\r\n          // manual update since the refresh might not detect\r\n          // the change immediately\r\n          let remaining = itemsRemaining! - 1;\r\n          setItemsRemaining(remaining);\r\n          setIsActive((candyMachine.state.isActive = remaining > 0));\r\n          candyMachine.state.isSoldOut = remaining === 0;\r\n          setSetupTxn(undefined);\r\n          setAlertState({\r\n            open: true,\r\n            message: 'Congratulations! Mint succeeded!',\r\n            severity: 'success',\r\n            hideDuration: 7000,\r\n          });\r\n          refreshCandyMachineState('processed');\r\n        } else if (status && !status.err) {\r\n          setAlertState({\r\n            open: true,\r\n            message:\r\n              'Mint likely failed! Anti-bot SOL 0.01 fee potentially charged! Check the explorer to confirm the mint failed and if so, make sure you are eligible to mint before trying again.',\r\n            severity: 'error',\r\n            hideDuration: 8000,\r\n          });\r\n          refreshCandyMachineState();\r\n        } else {\r\n          setAlertState({\r\n            open: true,\r\n            message: 'Mint failed! Please try again!',\r\n            severity: 'error',\r\n          });\r\n          refreshCandyMachineState();\r\n        }\r\n      }\r\n    } catch (error: any) {\r\n      let message = error.msg || 'Minting failed! Please try again!';\r\n      if (!error.msg) {\r\n        if (!error.message) {\r\n          message = 'Transaction timeout! Please try again.';\r\n        } else if (error.message.indexOf('0x137')) {\r\n          console.log(error);\r\n          message = `SOLD OUT!`;\r\n        } else if (error.message.indexOf('0x135')) {\r\n          message = `Insufficient funds to mint. Please fund your wallet.`;\r\n        }\r\n      } else {\r\n        if (error.code === 311) {\r\n          console.log(error);\r\n          message = `SOLD OUT!`;\r\n          window.location.reload();\r\n        } else if (error.code === 312) {\r\n          message = `Minting period hasn't started yet.`;\r\n        }\r\n      }\r\n\r\n      setAlertState({\r\n        open: true,\r\n        message,\r\n        severity: 'error',\r\n      });\r\n      // updates the candy machine state to reflect the latest\r\n      // information on chain\r\n      refreshCandyMachineState();\r\n    } finally {\r\n      setIsUserMinting(false);\r\n    }\r\n  };\r\n\r\n  const toggleMintButton = () => {\r\n    let active = !isActive || isPresale;\r\n\r\n    if (active) {\r\n      if (candyMachine!.state.isWhitelistOnly && !isWhitelistUser) {\r\n        active = false;\r\n      }\r\n      if (endDate && Date.now() >= endDate.getTime()) {\r\n        active = false;\r\n      }\r\n    }\r\n\r\n    if (\r\n      isPresale &&\r\n      candyMachine!.state.goLiveDate &&\r\n      candyMachine!.state.goLiveDate.toNumber() <= new Date().getTime() / 1000\r\n    ) {\r\n      setIsPresale((candyMachine!.state.isPresale = false));\r\n    }\r\n\r\n    setIsActive((candyMachine!.state.isActive = active));\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshCandyMachineState();\r\n  }, [\r\n    anchorWallet,\r\n    props.candyMachineId,\r\n    props.connection,\r\n    refreshCandyMachineState,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    (function loop() {\r\n      setTimeout(() => {\r\n        refreshCandyMachineState();\r\n        loop();\r\n      }, 20000);\r\n    })();\r\n  }, [refreshCandyMachineState]);\r\n\r\n  return (\r\n    <>\r\n      <Container style={{ marginTop: 100 }}>\r\n        <Container maxWidth=\"xs\" style={{ position: 'relative' }}>\r\n          <Paper\r\n            style={{\r\n              padding: 24,\r\n              paddingBottom: 10,\r\n              backgroundColor: '#151A1F',\r\n              borderRadius: 6,\r\n            }}\r\n          >\r\n            {!wallet.connected ? (\r\n              <ConnectButton>Connect Wallet</ConnectButton>\r\n            ) : (\r\n              <>\r\n                {candyMachine && (\r\n                  <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justifyContent=\"center\"\r\n                    wrap=\"nowrap\"\r\n                  >\r\n                    <Grid item xs={3}>\r\n                      <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        Remaining\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"h6\"\r\n                        color=\"textPrimary\"\r\n                        style={{\r\n                          fontWeight: 'bold',\r\n                        }}\r\n                      >\r\n                        {`${itemsRemaining}`}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        {isWhitelistUser && discountPrice\r\n                          ? 'Discount Price'\r\n                          : 'Price'}\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"h6\"\r\n                        color=\"textPrimary\"\r\n                        style={{ fontWeight: 'bold' }}\r\n                      >\r\n                        {isWhitelistUser && discountPrice\r\n                          ? `◎ ${formatNumber.asNumber(discountPrice)}`\r\n                          : `◎ ${formatNumber.asNumber(\r\n                            candyMachine.state.price,\r\n                          )}`}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={5}>\r\n                      {isActive && endDate && Date.now() < endDate.getTime() ? (\r\n                        <>\r\n                          <MintCountdown\r\n                            key=\"endSettings\"\r\n                            date={getCountdownDate(candyMachine)}\r\n                            style={{ justifyContent: 'flex-end' }}\r\n                            status=\"COMPLETED\"\r\n                            onComplete={toggleMintButton}\r\n                          />\r\n                          <Typography\r\n                            variant=\"caption\"\r\n                            align=\"center\"\r\n                            display=\"block\"\r\n                            style={{ fontWeight: 'bold' }}\r\n                          >\r\n                            TO END OF MINT\r\n                          </Typography>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <MintCountdown\r\n                            key=\"goLive\"\r\n                            date={getCountdownDate(candyMachine)}\r\n                            style={{ justifyContent: 'flex-end' }}\r\n                            status={\r\n                              candyMachine?.state?.isSoldOut ||\r\n                                (endDate && Date.now() > endDate.getTime())\r\n                                ? 'COMPLETED'\r\n                                : isPresale\r\n                                  ? 'PRESALE'\r\n                                  : 'LIVE'\r\n                            }\r\n                            onComplete={toggleMintButton}\r\n                          />\r\n                          {isPresale &&\r\n                            candyMachine.state.goLiveDate &&\r\n                            candyMachine.state.goLiveDate.toNumber() >\r\n                            new Date().getTime() / 1000 && (\r\n                              <Typography\r\n                                variant=\"caption\"\r\n                                align=\"center\"\r\n                                display=\"block\"\r\n                                style={{ fontWeight: 'bold' }}\r\n                              >\r\n                                UNTIL PUBLIC MINT\r\n                              </Typography>\r\n                            )}\r\n                        </>\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n                )}\r\n                <MintContainer>\r\n                  {candyMachine?.state.isActive &&\r\n                    candyMachine?.state.gatekeeper &&\r\n                    wallet.publicKey &&\r\n                    wallet.signTransaction ? (\r\n                    <GatewayProvider\r\n                      wallet={{\r\n                        publicKey:\r\n                          wallet.publicKey ||\r\n                          new PublicKey(CANDY_MACHINE_PROGRAM),\r\n                        //@ts-ignore\r\n                        signTransaction: wallet.signTransaction,\r\n                      }}\r\n                      gatekeeperNetwork={\r\n                        candyMachine?.state?.gatekeeper?.gatekeeperNetwork\r\n                      }\r\n                      clusterUrl={rpcUrl}\r\n                      cluster={cluster}\r\n                      handleTransaction={async (transaction: Transaction) => {\r\n                        setIsUserMinting(true);\r\n                        const userMustSign = transaction.signatures.find(sig =>\r\n                          sig.publicKey.equals(wallet.publicKey!),\r\n                        );\r\n                        if (userMustSign) {\r\n                          setAlertState({\r\n                            open: true,\r\n                            message: 'Please sign one-time Civic Pass issuance',\r\n                            severity: 'info',\r\n                          });\r\n                          try {\r\n                            transaction = await wallet.signTransaction!(\r\n                              transaction,\r\n                            );\r\n                          } catch (e) {\r\n                            setAlertState({\r\n                              open: true,\r\n                              message: 'User cancelled signing',\r\n                              severity: 'error',\r\n                            });\r\n                            // setTimeout(() => window.location.reload(), 2000);\r\n                            setIsUserMinting(false);\r\n                            throw e;\r\n                          }\r\n                        } else {\r\n                          setAlertState({\r\n                            open: true,\r\n                            message: 'Refreshing Civic Pass',\r\n                            severity: 'info',\r\n                          });\r\n                        }\r\n                        try {\r\n                          await sendTransaction(\r\n                            props.connection,\r\n                            wallet,\r\n                            transaction,\r\n                            [],\r\n                            true,\r\n                            'confirmed',\r\n                          );\r\n                          setAlertState({\r\n                            open: true,\r\n                            message: 'Please sign minting',\r\n                            severity: 'info',\r\n                          });\r\n                        } catch (e) {\r\n                          setAlertState({\r\n                            open: true,\r\n                            message:\r\n                              'Solana dropped the transaction, please try again',\r\n                            severity: 'warning',\r\n                          });\r\n                          console.error(e);\r\n                          // setTimeout(() => window.location.reload(), 2000);\r\n                          setIsUserMinting(false);\r\n                          throw e;\r\n                        }\r\n                        await onMint();\r\n                      }}\r\n                      broadcastTransaction={false}\r\n                      options={{ autoShowModal: false }}\r\n                    >\r\n                      <MintButton\r\n                        candyMachine={candyMachine}\r\n                        isMinting={isUserMinting}\r\n                        setIsMinting={val => setIsUserMinting(val)}\r\n                        onMint={onMint}\r\n                        isActive={\r\n                          isActive ||\r\n                          (isPresale && isWhitelistUser && isValidBalance)\r\n                        }\r\n                      />\r\n                    </GatewayProvider>\r\n                  ) : (\r\n                    <MintButton\r\n                      candyMachine={candyMachine}\r\n                      isMinting={isUserMinting}\r\n                      setIsMinting={val => setIsUserMinting(val)}\r\n                      onMint={onMint}\r\n                      isActive={\r\n                        isActive ||\r\n                        (isPresale && isWhitelistUser && isValidBalance)\r\n                      }\r\n                    />\r\n                  )}\r\n                </MintContainer>\r\n              </>\r\n            )}\r\n            <Typography\r\n              variant=\"caption\"\r\n              align=\"center\"\r\n              display=\"block\"\r\n              style={{ marginTop: 7, color: 'grey' }}\r\n            >\r\n              Powered by METAPLEX\r\n            </Typography>\r\n          </Paper>\r\n        </Container>\r\n\r\n        <Snackbar\r\n          open={alertState.open}\r\n          autoHideDuration={\r\n            alertState.hideDuration === undefined ? 6000 : alertState.hideDuration\r\n          }\r\n          onClose={() => setAlertState({ ...alertState, open: false })}\r\n        >\r\n          <Alert\r\n            onClose={() => setAlertState({ ...alertState, open: false })}\r\n            severity={alertState.severity}\r\n          >\r\n            {alertState.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </Container>\r\n\r\n      <Trait \r\n        candyMachineId = {props.candyMachineId}\r\n        connection={props.connection}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst getCountdownDate = (\r\n  candyMachine: CandyMachineAccount,\r\n): Date | undefined => {\r\n  if (\r\n    candyMachine.state.isActive &&\r\n    candyMachine.state.endSettings?.endSettingType.date\r\n  ) {\r\n    return toDate(candyMachine.state.endSettings.number);\r\n  }\r\n\r\n  return toDate(\r\n    candyMachine.state.goLiveDate\r\n      ? candyMachine.state.goLiveDate\r\n      : candyMachine.state.isPresale\r\n        ? new anchor.BN(new Date().getTime() / 1000)\r\n        : undefined,\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import './App.css';\r\nimport { useMemo } from 'react';\r\nimport * as anchor from '@project-serum/anchor';\r\nimport Home from './Home';\r\nimport { DEFAULT_TIMEOUT } from './connection';\r\nimport { clusterApiUrl } from '@solana/web3.js';\r\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\r\nimport {\r\n  getPhantomWallet,\r\n  getSlopeWallet,\r\n  getSolflareWallet,\r\n  getSolletWallet,\r\n  getSolletExtensionWallet,\r\n} from '@solana/wallet-adapter-wallets';\r\n\r\nimport {\r\n  ConnectionProvider,\r\n  WalletProvider,\r\n} from '@solana/wallet-adapter-react';\r\nimport { WalletDialogProvider } from '@solana/wallet-adapter-material-ui';\r\n\r\nimport { ThemeProvider, createTheme } from '@material-ui/core';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    type: 'dark',\r\n  },\r\n});\r\n\r\nconst getCandyMachineId = (): anchor.web3.PublicKey | undefined => {\r\n  try {\r\n    const candyMachineId = new anchor.web3.PublicKey(\r\n      process.env.REACT_APP_CANDY_MACHINE_ID!,\r\n    );\r\n\r\n    return candyMachineId;\r\n  } catch (e) {\r\n    console.log('Failed to construct CandyMachineId', e);\r\n    return undefined;\r\n  }\r\n};\r\n\r\nconst candyMachineId = getCandyMachineId();\r\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\r\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\r\nconst connection = new anchor.web3.Connection(\r\n  rpcHost ? rpcHost : anchor.web3.clusterApiUrl('devnet'),\r\n);\r\n\r\nconst App = () => {\r\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\r\n\r\n  const wallets = useMemo(\r\n    () => [\r\n      getPhantomWallet(),\r\n      getSolflareWallet(),\r\n      getSlopeWallet(),\r\n      getSolletWallet({ network }),\r\n      getSolletExtensionWallet({ network }),\r\n    ],\r\n    [],\r\n  );\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <ConnectionProvider endpoint={endpoint}>\r\n        <WalletProvider wallets={wallets} autoConnect>\r\n          <WalletDialogProvider>\r\n            <Home\r\n              candyMachineId={candyMachineId}\r\n              connection={connection}\r\n              txTimeout={DEFAULT_TIMEOUT}\r\n              rpcHost={rpcHost}\r\n              network={network}\r\n            />\r\n          </WalletDialogProvider>\r\n        </WalletProvider>\r\n      </ConnectionProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import * as anchor from '@project-serum/anchor';\r\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token';\r\nimport { SystemProgram } from '@solana/web3.js';\r\nimport {\r\n  LAMPORTS_PER_SOL,\r\n  SYSVAR_RENT_PUBKEY,\r\n  TransactionInstruction,\r\n} from '@solana/web3.js';\r\n\r\nexport interface AlertState {\r\n  open: boolean;\r\n  message: string;\r\n  severity: 'success' | 'info' | 'warning' | 'error' | undefined;\r\n  hideDuration?: number | null;\r\n}\r\n\r\nexport const toDate = (value?: anchor.BN) => {\r\n  if (!value) {\r\n    return;\r\n  }\r\n\r\n  return new Date(value.toNumber() * 1000);\r\n};\r\n\r\nconst numberFormater = new Intl.NumberFormat('en-US', {\r\n  style: 'decimal',\r\n  minimumFractionDigits: 2,\r\n  maximumFractionDigits: 2,\r\n});\r\n\r\nexport const formatNumber = {\r\n  format: (val?: number) => {\r\n    if (!val) {\r\n      return '--';\r\n    }\r\n\r\n    return numberFormater.format(val);\r\n  },\r\n  asNumber: (val?: anchor.BN) => {\r\n    if (!val) {\r\n      return undefined;\r\n    }\r\n\r\n    return val.toNumber() / LAMPORTS_PER_SOL;\r\n  },\r\n};\r\n\r\nexport const SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID =\r\n  new anchor.web3.PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\r\n\r\nexport const CIVIC = new anchor.web3.PublicKey(\r\n  'gatem74V238djXdzWnJf94Wo1DcnuGkfijbf3AuBhfs',\r\n);\r\n\r\nexport const getAtaForMint = async (\r\n  mint: anchor.web3.PublicKey,\r\n  buyer: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [buyer.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()],\r\n    SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\r\n  );\r\n};\r\n\r\nexport const getNetworkExpire = async (\r\n  gatekeeperNetwork: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [gatekeeperNetwork.toBuffer(), Buffer.from('expire')],\r\n    CIVIC,\r\n  );\r\n};\r\n\r\nexport const getNetworkToken = async (\r\n  wallet: anchor.web3.PublicKey,\r\n  gatekeeperNetwork: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [\r\n      wallet.toBuffer(),\r\n      Buffer.from('gateway'),\r\n      Buffer.from([0, 0, 0, 0, 0, 0, 0, 0]),\r\n      gatekeeperNetwork.toBuffer(),\r\n    ],\r\n    CIVIC,\r\n  );\r\n};\r\n\r\nexport function createAssociatedTokenAccountInstruction(\r\n  associatedTokenAddress: anchor.web3.PublicKey,\r\n  payer: anchor.web3.PublicKey,\r\n  walletAddress: anchor.web3.PublicKey,\r\n  splTokenMintAddress: anchor.web3.PublicKey,\r\n) {\r\n  const keys = [\r\n    {\r\n      pubkey: payer,\r\n      isSigner: true,\r\n      isWritable: true,\r\n    },\r\n    {\r\n      pubkey: associatedTokenAddress,\r\n      isSigner: false,\r\n      isWritable: true,\r\n    },\r\n    {\r\n      pubkey: walletAddress,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    {\r\n      pubkey: splTokenMintAddress,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    {\r\n      pubkey: SystemProgram.programId,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    {\r\n      pubkey: TOKEN_PROGRAM_ID,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    {\r\n      pubkey: SYSVAR_RENT_PUBKEY,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n  ];\r\n  return new TransactionInstruction({\r\n    keys,\r\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\r\n    data: Buffer.from([]),\r\n  });\r\n}\r\n","import {\r\n  Keypair,\r\n  Commitment,\r\n  Connection,\r\n  RpcResponseAndContext,\r\n  SignatureStatus,\r\n  SimulatedTransactionResponse,\r\n  Transaction,\r\n  TransactionInstruction,\r\n  TransactionSignature,\r\n  Blockhash,\r\n  FeeCalculator,\r\n} from '@solana/web3.js';\r\n\r\nimport { WalletNotConnectedError } from '@solana/wallet-adapter-base';\r\n\r\ninterface BlockhashAndFeeCalculator {\r\n  blockhash: Blockhash;\r\n  feeCalculator: FeeCalculator;\r\n}\r\n\r\nexport const DEFAULT_TIMEOUT = 60000;\r\n\r\nexport const getErrorForTransaction = async (\r\n  connection: Connection,\r\n  txid: string,\r\n) => {\r\n  // wait for all confirmation before geting transaction\r\n  await connection.confirmTransaction(txid, 'max');\r\n\r\n  const tx = await connection.getParsedConfirmedTransaction(txid);\r\n\r\n  const errors: string[] = [];\r\n  if (tx?.meta && tx.meta.logMessages) {\r\n    tx.meta.logMessages.forEach(log => {\r\n      const regex = /Error: (.*)/gm;\r\n      let m;\r\n      while ((m = regex.exec(log)) !== null) {\r\n        // This is necessary to avoid infinite loops with zero-width matches\r\n        if (m.index === regex.lastIndex) {\r\n          regex.lastIndex++;\r\n        }\r\n\r\n        if (m.length > 1) {\r\n          errors.push(m[1]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport enum SequenceType {\r\n  Sequential,\r\n  Parallel,\r\n  StopOnFailure,\r\n}\r\n\r\nexport async function sendTransactionsWithManualRetry(\r\n  connection: Connection,\r\n  wallet: any,\r\n  instructions: TransactionInstruction[][],\r\n  signers: Keypair[][],\r\n): Promise<(string | undefined)[]> {\r\n  let stopPoint = 0;\r\n  let tries = 0;\r\n  let lastInstructionsLength = null;\r\n  let toRemoveSigners: Record<number, boolean> = {};\r\n  instructions = instructions.filter((instr, i) => {\r\n    if (instr.length > 0) {\r\n      return true;\r\n    } else {\r\n      toRemoveSigners[i] = true;\r\n      return false;\r\n    }\r\n  });\r\n  let ids: string[] = [];\r\n  let filteredSigners = signers.filter((_, i) => !toRemoveSigners[i]);\r\n\r\n  while (stopPoint < instructions.length && tries < 3) {\r\n    instructions = instructions.slice(stopPoint, instructions.length);\r\n    filteredSigners = filteredSigners.slice(stopPoint, filteredSigners.length);\r\n\r\n    if (instructions.length === lastInstructionsLength) tries = tries + 1;\r\n    else tries = 0;\r\n\r\n    try {\r\n      if (instructions.length === 1) {\r\n        const id = await sendTransactionWithRetry(\r\n          connection,\r\n          wallet,\r\n          instructions[0],\r\n          filteredSigners[0],\r\n          'single',\r\n        );\r\n        ids.push(id.txid);\r\n        stopPoint = 1;\r\n      } else {\r\n        const { txs } = await sendTransactions(\r\n          connection,\r\n          wallet,\r\n          instructions,\r\n          filteredSigners,\r\n          SequenceType.StopOnFailure,\r\n          'single',\r\n        );\r\n        ids = ids.concat(txs.map(t => t.txid));\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n    console.log(\r\n      'Died on ',\r\n      stopPoint,\r\n      'retrying from instruction',\r\n      instructions[stopPoint],\r\n      'instructions length is',\r\n      instructions.length,\r\n    );\r\n    lastInstructionsLength = instructions.length;\r\n  }\r\n\r\n  return ids;\r\n}\r\n\r\nexport const sendTransactions = async (\r\n  connection: Connection,\r\n  wallet: any,\r\n  instructionSet: TransactionInstruction[][],\r\n  signersSet: Keypair[][],\r\n  sequenceType: SequenceType = SequenceType.Parallel,\r\n  commitment: Commitment = 'singleGossip',\r\n  successCallback: (txid: string, ind: number) => void = (txid, ind) => {},\r\n  failCallback: (reason: string, ind: number) => boolean = (txid, ind) => false,\r\n  block?: BlockhashAndFeeCalculator,\r\n  beforeTransactions: Transaction[] = [],\r\n  afterTransactions: Transaction[] = [],\r\n): Promise<{ number: number; txs: { txid: string; slot: number }[] }> => {\r\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\r\n\r\n  const unsignedTxns: Transaction[] = beforeTransactions;\r\n\r\n  if (!block) {\r\n    block = await connection.getRecentBlockhash(commitment);\r\n  }\r\n\r\n  for (let i = 0; i < instructionSet.length; i++) {\r\n    const instructions = instructionSet[i];\r\n    const signers = signersSet[i];\r\n\r\n    if (instructions.length === 0) {\r\n      continue;\r\n    }\r\n\r\n    let transaction = new Transaction();\r\n    instructions.forEach(instruction => transaction.add(instruction));\r\n    transaction.recentBlockhash = block.blockhash;\r\n    transaction.setSigners(\r\n      // fee payed by the wallet owner\r\n      wallet.publicKey,\r\n      ...signers.map(s => s.publicKey),\r\n    );\r\n\r\n    if (signers.length > 0) {\r\n      transaction.partialSign(...signers);\r\n    }\r\n\r\n    unsignedTxns.push(transaction);\r\n  }\r\n  unsignedTxns.push(...afterTransactions);\r\n\r\n  const partiallySignedTransactions = unsignedTxns.filter(t =>\r\n    t.signatures.find(sig => sig.publicKey.equals(wallet.publicKey)),\r\n  );\r\n  const fullySignedTransactions = unsignedTxns.filter(\r\n    t => !t.signatures.find(sig => sig.publicKey.equals(wallet.publicKey)),\r\n  );\r\n  let signedTxns = await wallet.signAllTransactions(\r\n    partiallySignedTransactions,\r\n  );\r\n  signedTxns = fullySignedTransactions.concat(signedTxns);\r\n  const pendingTxns: Promise<{ txid: string; slot: number }>[] = [];\r\n\r\n  console.log(\r\n    'Signed txns length',\r\n    signedTxns.length,\r\n    'vs handed in length',\r\n    instructionSet.length,\r\n  );\r\n  for (let i = 0; i < signedTxns.length; i++) {\r\n    const signedTxnPromise = sendSignedTransaction({\r\n      connection,\r\n      signedTransaction: signedTxns[i],\r\n    });\r\n\r\n    if (sequenceType !== SequenceType.Parallel) {\r\n      try {\r\n        await signedTxnPromise.then(({ txid, slot }) =>\r\n          successCallback(txid, i),\r\n        );\r\n        pendingTxns.push(signedTxnPromise);\r\n      } catch (e) {\r\n        console.log('Failed at txn index:', i);\r\n        console.log('Caught failure:', e);\r\n\r\n        failCallback(signedTxns[i], i);\r\n        if (sequenceType === SequenceType.StopOnFailure) {\r\n          return {\r\n            number: i,\r\n            txs: await Promise.all(pendingTxns),\r\n          };\r\n        }\r\n      }\r\n    } else {\r\n      pendingTxns.push(signedTxnPromise);\r\n    }\r\n  }\r\n\r\n  if (sequenceType !== SequenceType.Parallel) {\r\n    const result = await Promise.all(pendingTxns);\r\n    return { number: signedTxns.length, txs: result };\r\n  }\r\n\r\n  return { number: signedTxns.length, txs: await Promise.all(pendingTxns) };\r\n};\r\n\r\nexport const sendTransaction = async (\r\n  connection: Connection,\r\n  wallet: any,\r\n  instructions: TransactionInstruction[] | Transaction,\r\n  signers: Keypair[],\r\n  awaitConfirmation = true,\r\n  commitment: Commitment = 'singleGossip',\r\n  includesFeePayer: boolean = false,\r\n  block?: BlockhashAndFeeCalculator,\r\n) => {\r\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\r\n\r\n  let transaction: Transaction;\r\n  if (instructions instanceof Transaction) {\r\n    transaction = instructions;\r\n  } else {\r\n    transaction = new Transaction();\r\n    instructions.forEach(instruction => transaction.add(instruction));\r\n    transaction.recentBlockhash = (\r\n      block || (await connection.getRecentBlockhash(commitment))\r\n    ).blockhash;\r\n\r\n    if (includesFeePayer) {\r\n      transaction.setSigners(...signers.map(s => s.publicKey));\r\n    } else {\r\n      transaction.setSigners(\r\n        // fee payed by the wallet owner\r\n        wallet.publicKey,\r\n        ...signers.map(s => s.publicKey),\r\n      );\r\n    }\r\n\r\n    if (signers.length > 0) {\r\n      transaction.partialSign(...signers);\r\n    }\r\n    if (!includesFeePayer) {\r\n      transaction = await wallet.signTransaction(transaction);\r\n    }\r\n  }\r\n\r\n  const rawTransaction = transaction.serialize();\r\n  let options = {\r\n    skipPreflight: true,\r\n    commitment,\r\n  };\r\n\r\n  const txid = await connection.sendRawTransaction(rawTransaction, options);\r\n  let slot = 0;\r\n\r\n  if (awaitConfirmation) {\r\n    const confirmation = await awaitTransactionSignatureConfirmation(\r\n      txid,\r\n      DEFAULT_TIMEOUT,\r\n      connection,\r\n      commitment,\r\n    );\r\n\r\n    if (!confirmation)\r\n      throw new Error('Timed out awaiting confirmation on transaction');\r\n    slot = confirmation?.slot || 0;\r\n\r\n    if (confirmation?.err) {\r\n      const errors = await getErrorForTransaction(connection, txid);\r\n\r\n      console.log(errors);\r\n      throw new Error(`Raw transaction ${txid} failed`);\r\n    }\r\n  }\r\n\r\n  return { txid, slot };\r\n};\r\n\r\nexport const sendTransactionWithRetry = async (\r\n  connection: Connection,\r\n  wallet: any,\r\n  instructions: TransactionInstruction[],\r\n  signers: Keypair[],\r\n  commitment: Commitment = 'singleGossip',\r\n  includesFeePayer: boolean = false,\r\n  block?: BlockhashAndFeeCalculator,\r\n  beforeSend?: () => void,\r\n) => {\r\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\r\n\r\n  let transaction = new Transaction();\r\n  instructions.forEach(instruction => transaction.add(instruction));\r\n  transaction.recentBlockhash = (\r\n    block || (await connection.getRecentBlockhash(commitment))\r\n  ).blockhash;\r\n\r\n  if (includesFeePayer) {\r\n    transaction.setSigners(...signers.map(s => s.publicKey));\r\n  } else {\r\n    transaction.setSigners(\r\n      // fee payed by the wallet owner\r\n      wallet.publicKey,\r\n      ...signers.map(s => s.publicKey),\r\n    );\r\n  }\r\n\r\n  if (signers.length > 0) {\r\n    transaction.partialSign(...signers);\r\n  }\r\n  if (!includesFeePayer) {\r\n    transaction = await wallet.signTransaction(transaction);\r\n  }\r\n\r\n  if (beforeSend) {\r\n    beforeSend();\r\n  }\r\n\r\n  const { txid, slot } = await sendSignedTransaction({\r\n    connection,\r\n    signedTransaction: transaction,\r\n  });\r\n\r\n  return { txid, slot };\r\n};\r\n\r\nexport const getUnixTs = () => {\r\n  return new Date().getTime() / 1000;\r\n};\r\n\r\nexport async function sendSignedTransaction({\r\n  signedTransaction,\r\n  connection,\r\n  timeout = DEFAULT_TIMEOUT,\r\n}: {\r\n  signedTransaction: Transaction;\r\n  connection: Connection;\r\n  sendingMessage?: string;\r\n  sentMessage?: string;\r\n  successMessage?: string;\r\n  timeout?: number;\r\n}): Promise<{ txid: string; slot: number }> {\r\n  const rawTransaction = signedTransaction.serialize();\r\n\r\n  const startTime = getUnixTs();\r\n  let slot = 0;\r\n  const txid: TransactionSignature = await connection.sendRawTransaction(\r\n    rawTransaction,\r\n    {\r\n      skipPreflight: true,\r\n    },\r\n  );\r\n\r\n  console.log('Started awaiting confirmation for', txid);\r\n\r\n  let done = false;\r\n  (async () => {\r\n    while (!done && getUnixTs() - startTime < timeout) {\r\n      connection.sendRawTransaction(rawTransaction, {\r\n        skipPreflight: true,\r\n      });\r\n      await sleep(500);\r\n    }\r\n  })();\r\n  try {\r\n    const confirmation = await awaitTransactionSignatureConfirmation(\r\n      txid,\r\n      timeout,\r\n      connection,\r\n      'recent',\r\n      true,\r\n    );\r\n\r\n    if (!confirmation)\r\n      throw new Error('Timed out awaiting confirmation on transaction');\r\n\r\n    if (confirmation.err) {\r\n      console.error(confirmation.err);\r\n      throw new Error('Transaction failed: Custom instruction error');\r\n    }\r\n\r\n    slot = confirmation?.slot || 0;\r\n  } catch (err: any) {\r\n    console.error('Timeout Error caught', err);\r\n    if (err.timeout) {\r\n      throw new Error('Timed out awaiting confirmation on transaction');\r\n    }\r\n    let simulateResult: SimulatedTransactionResponse | null = null;\r\n    try {\r\n      simulateResult = (\r\n        await simulateTransaction(connection, signedTransaction, 'single')\r\n      ).value;\r\n    } catch (e) {}\r\n    if (simulateResult && simulateResult.err) {\r\n      if (simulateResult.logs) {\r\n        for (let i = simulateResult.logs.length - 1; i >= 0; --i) {\r\n          const line = simulateResult.logs[i];\r\n          if (line.startsWith('Program log: ')) {\r\n            throw new Error(\r\n              'Transaction failed: ' + line.slice('Program log: '.length),\r\n            );\r\n          }\r\n        }\r\n      }\r\n      throw new Error(JSON.stringify(simulateResult.err));\r\n    }\r\n    // throw new Error('Transaction failed');\r\n  } finally {\r\n    done = true;\r\n  }\r\n\r\n  console.log('Latency', txid, getUnixTs() - startTime);\r\n  return { txid, slot };\r\n}\r\n\r\nasync function simulateTransaction(\r\n  connection: Connection,\r\n  transaction: Transaction,\r\n  commitment: Commitment,\r\n): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\r\n  // @ts-ignore\r\n  transaction.recentBlockhash = await connection._recentBlockhash(\r\n    // @ts-ignore\r\n    connection._disableBlockhashCaching,\r\n  );\r\n\r\n  const signData = transaction.serializeMessage();\r\n  // @ts-ignore\r\n  const wireTransaction = transaction._serialize(signData);\r\n  const encodedTransaction = wireTransaction.toString('base64');\r\n  const config: any = { encoding: 'base64', commitment };\r\n  const args = [encodedTransaction, config];\r\n\r\n  // @ts-ignore\r\n  const res = await connection._rpcRequest('simulateTransaction', args);\r\n  if (res.error) {\r\n    throw new Error('failed to simulate transaction: ' + res.error.message);\r\n  }\r\n  return res.result;\r\n}\r\n\r\nasync function awaitTransactionSignatureConfirmation(\r\n  txid: TransactionSignature,\r\n  timeout: number,\r\n  connection: Connection,\r\n  commitment: Commitment = 'recent',\r\n  queryStatus = false,\r\n): Promise<SignatureStatus | null | void> {\r\n  let done = false;\r\n  let status: SignatureStatus | null | void = {\r\n    slot: 0,\r\n    confirmations: 0,\r\n    err: null,\r\n  };\r\n  let subId = 0;\r\n  status = await new Promise(async (resolve, reject) => {\r\n    setTimeout(() => {\r\n      if (done) {\r\n        return;\r\n      }\r\n      done = true;\r\n      console.log('Rejecting for timeout...');\r\n      reject({ timeout: true });\r\n    }, timeout);\r\n    try {\r\n      subId = connection.onSignature(\r\n        txid,\r\n        (result, context) => {\r\n          done = true;\r\n          status = {\r\n            err: result.err,\r\n            slot: context.slot,\r\n            confirmations: 0,\r\n          };\r\n          if (result.err) {\r\n            console.log('Rejected via websocket', result.err);\r\n            reject(status);\r\n          } else {\r\n            console.log('Resolved via websocket', result);\r\n            resolve(status);\r\n          }\r\n        },\r\n        commitment,\r\n      );\r\n    } catch (e) {\r\n      done = true;\r\n      console.error('WS error in setup', txid, e);\r\n    }\r\n    while (!done && queryStatus) {\r\n      // eslint-disable-next-line no-loop-func\r\n      (async () => {\r\n        try {\r\n          const signatureStatuses = await connection.getSignatureStatuses([\r\n            txid,\r\n          ]);\r\n          status = signatureStatuses && signatureStatuses.value[0];\r\n          if (!done) {\r\n            if (!status) {\r\n              console.log('REST null result for', txid, status);\r\n            } else if (status.err) {\r\n              console.log('REST error for', txid, status);\r\n              done = true;\r\n              reject(status.err);\r\n            } else if (!status.confirmations) {\r\n              console.log('REST no confirmations for', txid, status);\r\n            } else {\r\n              console.log('REST confirmation for', txid, status);\r\n              done = true;\r\n              resolve(status);\r\n            }\r\n          }\r\n        } catch (e) {\r\n          if (!done) {\r\n            console.log('REST connection error: txid', txid, e);\r\n          }\r\n        }\r\n      })();\r\n      await sleep(2000);\r\n    }\r\n  });\r\n\r\n  //@ts-ignore\r\n  if (connection._signatureSubscriptions[subId])\r\n    connection.removeSignatureListener(subId);\r\n  done = true;\r\n  console.log('Returning status', status);\r\n  return status;\r\n}\r\nexport function sleep(ms: number): Promise<void> {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n","import * as anchor from '@project-serum/anchor';\r\n\r\nimport { MintLayout, TOKEN_PROGRAM_ID, Token } from '@solana/spl-token';\r\nimport {\r\n  SystemProgram,\r\n  Transaction,\r\n  SYSVAR_SLOT_HASHES_PUBKEY,\r\n} from '@solana/web3.js';\r\nimport { sendTransactions, SequenceType } from './connection';\r\n\r\nimport {\r\n  CIVIC,\r\n  getAtaForMint,\r\n  getNetworkExpire,\r\n  getNetworkToken,\r\n  SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\r\n} from './utils';\r\n\r\nexport const CANDY_MACHINE_PROGRAM = new anchor.web3.PublicKey(\r\n  'cndy3Z4yapfJBmL3ShUp5exZKqR3z33thTzeNMm2gRZ',\r\n);\r\n\r\nconst TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey(\r\n  'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',\r\n);\r\n\r\ninterface CandyMachineState {\r\n  authority: anchor.web3.PublicKey;\r\n  itemsAvailable: number;\r\n  itemsRedeemed: number;\r\n  itemsRemaining: number;\r\n  treasury: anchor.web3.PublicKey;\r\n  tokenMint: null | anchor.web3.PublicKey;\r\n  isSoldOut: boolean;\r\n  isActive: boolean;\r\n  isPresale: boolean;\r\n  isWhitelistOnly: boolean;\r\n  goLiveDate: anchor.BN;\r\n  price: anchor.BN;\r\n  gatekeeper: null | {\r\n    expireOnUse: boolean;\r\n    gatekeeperNetwork: anchor.web3.PublicKey;\r\n  };\r\n  endSettings: null | {\r\n    number: anchor.BN;\r\n    endSettingType: any;\r\n  };\r\n  whitelistMintSettings: null | {\r\n    mode: any;\r\n    mint: anchor.web3.PublicKey;\r\n    presale: boolean;\r\n    discountPrice: null | anchor.BN;\r\n  };\r\n  hiddenSettings: null | {\r\n    name: string;\r\n    uri: string;\r\n    hash: Uint8Array;\r\n  };\r\n  retainAuthority: boolean;\r\n}\r\n\r\nexport interface CandyMachineAccount {\r\n  id: anchor.web3.PublicKey;\r\n  program: anchor.Program;\r\n  state: CandyMachineState;\r\n}\r\n\r\nexport const awaitTransactionSignatureConfirmation = async (\r\n  txid: anchor.web3.TransactionSignature,\r\n  timeout: number,\r\n  connection: anchor.web3.Connection,\r\n  queryStatus = false,\r\n): Promise<anchor.web3.SignatureStatus | null | void> => {\r\n  let done = false;\r\n  let status: anchor.web3.SignatureStatus | null | void = {\r\n    slot: 0,\r\n    confirmations: 0,\r\n    err: null,\r\n  };\r\n  let subId = 0;\r\n  status = await new Promise(async (resolve, reject) => {\r\n    setTimeout(() => {\r\n      if (done) {\r\n        return;\r\n      }\r\n      done = true;\r\n      console.log('Rejecting for timeout...');\r\n      reject({ timeout: true });\r\n    }, timeout);\r\n\r\n    while (!done && queryStatus) {\r\n      // eslint-disable-next-line no-loop-func\r\n      (async () => {\r\n        try {\r\n          const signatureStatuses = await connection.getSignatureStatuses([\r\n            txid,\r\n          ]);\r\n          status = signatureStatuses && signatureStatuses.value[0];\r\n          if (!done) {\r\n            if (!status) {\r\n              console.log('REST null result for', txid, status);\r\n            } else if (status.err) {\r\n              console.log('REST error for', txid, status);\r\n              done = true;\r\n              reject(status.err);\r\n            } else if (!status.confirmations) {\r\n              console.log('REST no confirmations for', txid, status);\r\n            } else {\r\n              console.log('REST confirmation for', txid, status);\r\n              done = true;\r\n              resolve(status);\r\n            }\r\n          }\r\n        } catch (e) {\r\n          if (!done) {\r\n            console.log('REST connection error: txid', txid, e);\r\n          }\r\n        }\r\n      })();\r\n      await sleep(2000);\r\n    }\r\n  });\r\n\r\n  //@ts-ignore\r\n  if (connection._signatureSubscriptions[subId]) {\r\n    connection.removeSignatureListener(subId);\r\n  }\r\n  done = true;\r\n  console.log('Returning status', status);\r\n  return status;\r\n};\r\n\r\nconst createAssociatedTokenAccountInstruction = (\r\n  associatedTokenAddress: anchor.web3.PublicKey,\r\n  payer: anchor.web3.PublicKey,\r\n  walletAddress: anchor.web3.PublicKey,\r\n  splTokenMintAddress: anchor.web3.PublicKey,\r\n) => {\r\n  const keys = [\r\n    { pubkey: payer, isSigner: true, isWritable: true },\r\n    { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\r\n    { pubkey: walletAddress, isSigner: false, isWritable: false },\r\n    { pubkey: splTokenMintAddress, isSigner: false, isWritable: false },\r\n    {\r\n      pubkey: anchor.web3.SystemProgram.programId,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\r\n    {\r\n      pubkey: anchor.web3.SYSVAR_RENT_PUBKEY,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n  ];\r\n  return new anchor.web3.TransactionInstruction({\r\n    keys,\r\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\r\n    data: Buffer.from([]),\r\n  });\r\n};\r\n\r\nexport const getCandyMachineState = async (\r\n  anchorWallet: anchor.Wallet,\r\n  candyMachineId: anchor.web3.PublicKey,\r\n  connection: anchor.web3.Connection,\r\n): Promise<CandyMachineAccount> => {\r\n  const provider = new anchor.Provider(connection, anchorWallet, {\r\n    preflightCommitment: 'processed',\r\n  });\r\n\r\n  const idl = await anchor.Program.fetchIdl(CANDY_MACHINE_PROGRAM, provider);\r\n\r\n  const program = new anchor.Program(idl!, CANDY_MACHINE_PROGRAM, provider);\r\n\r\n  const state: any = await program.account.candyMachine.fetch(candyMachineId);\r\n  const itemsAvailable = state.data.itemsAvailable.toNumber();\r\n  const itemsRedeemed = state.itemsRedeemed.toNumber();\r\n  const itemsRemaining = itemsAvailable - itemsRedeemed;\r\n\r\n  return {\r\n    id: candyMachineId,\r\n    program,\r\n    state: {\r\n      authority: state.authority,\r\n      itemsAvailable,\r\n      itemsRedeemed,\r\n      itemsRemaining,\r\n      isSoldOut: itemsRemaining === 0,\r\n      isActive: false,\r\n      isPresale: false,\r\n      isWhitelistOnly: false,\r\n      goLiveDate: state.data.goLiveDate,\r\n      treasury: state.wallet,\r\n      tokenMint: state.tokenMint,\r\n      gatekeeper: state.data.gatekeeper,\r\n      endSettings: state.data.endSettings,\r\n      whitelistMintSettings: state.data.whitelistMintSettings,\r\n      hiddenSettings: state.data.hiddenSettings,\r\n      price: state.data.price,\r\n      retainAuthority: state.data.retainAuthority,\r\n    },\r\n  };\r\n};\r\n\r\nconst getMasterEdition = async (\r\n  mint: anchor.web3.PublicKey,\r\n): Promise<anchor.web3.PublicKey> => {\r\n  return (\r\n    await anchor.web3.PublicKey.findProgramAddress(\r\n      [\r\n        Buffer.from('metadata'),\r\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\r\n        mint.toBuffer(),\r\n        Buffer.from('edition'),\r\n      ],\r\n      TOKEN_METADATA_PROGRAM_ID,\r\n    )\r\n  )[0];\r\n};\r\n\r\nconst getMetadata = async (\r\n  mint: anchor.web3.PublicKey,\r\n): Promise<anchor.web3.PublicKey> => {\r\n  return (\r\n    await anchor.web3.PublicKey.findProgramAddress(\r\n      [\r\n        Buffer.from('metadata'),\r\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\r\n        mint.toBuffer(),\r\n      ],\r\n      TOKEN_METADATA_PROGRAM_ID,\r\n    )\r\n  )[0];\r\n};\r\n\r\nexport const getCandyMachineCreator = async (\r\n  candyMachine: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [Buffer.from('candy_machine'), candyMachine.toBuffer()],\r\n    CANDY_MACHINE_PROGRAM,\r\n  );\r\n};\r\n\r\nexport const getCollectionPDA = async (\r\n  candyMachineAddress: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [Buffer.from('collection'), candyMachineAddress.toBuffer()],\r\n    CANDY_MACHINE_PROGRAM,\r\n  );\r\n};\r\n\r\nexport interface CollectionData {\r\n  mint: anchor.web3.PublicKey;\r\n  candyMachine: anchor.web3.PublicKey;\r\n}\r\n\r\nexport const getCollectionAuthorityRecordPDA = async (\r\n  mint: anchor.web3.PublicKey,\r\n  newAuthority: anchor.web3.PublicKey,\r\n): Promise<anchor.web3.PublicKey> => {\r\n  return (\r\n    await anchor.web3.PublicKey.findProgramAddress(\r\n      [\r\n        Buffer.from('metadata'),\r\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\r\n        mint.toBuffer(),\r\n        Buffer.from('collection_authority'),\r\n        newAuthority.toBuffer(),\r\n      ],\r\n      TOKEN_METADATA_PROGRAM_ID,\r\n    )\r\n  )[0];\r\n};\r\n\r\nexport type SetupState = {\r\n  mint: anchor.web3.Keypair;\r\n  userTokenAccount: anchor.web3.PublicKey;\r\n  transaction: string;\r\n};\r\n\r\nexport const createAccountsForMint = async (\r\n  candyMachine: CandyMachineAccount,\r\n  payer: anchor.web3.PublicKey,\r\n): Promise<SetupState> => {\r\n  const mint = anchor.web3.Keypair.generate();\r\n  const userTokenAccountAddress = (\r\n    await getAtaForMint(mint.publicKey, payer)\r\n  )[0];\r\n\r\n  const signers: anchor.web3.Keypair[] = [mint];\r\n  const instructions = [\r\n    anchor.web3.SystemProgram.createAccount({\r\n      fromPubkey: payer,\r\n      newAccountPubkey: mint.publicKey,\r\n      space: MintLayout.span,\r\n      lamports:\r\n        await candyMachine.program.provider.connection.getMinimumBalanceForRentExemption(\r\n          MintLayout.span,\r\n        ),\r\n      programId: TOKEN_PROGRAM_ID,\r\n    }),\r\n    Token.createInitMintInstruction(\r\n      TOKEN_PROGRAM_ID,\r\n      mint.publicKey,\r\n      0,\r\n      payer,\r\n      payer,\r\n    ),\r\n    createAssociatedTokenAccountInstruction(\r\n      userTokenAccountAddress,\r\n      payer,\r\n      payer,\r\n      mint.publicKey,\r\n    ),\r\n    Token.createMintToInstruction(\r\n      TOKEN_PROGRAM_ID,\r\n      mint.publicKey,\r\n      userTokenAccountAddress,\r\n      payer,\r\n      [],\r\n      1,\r\n    ),\r\n  ];\r\n\r\n  return {\r\n    mint: mint,\r\n    userTokenAccount: userTokenAccountAddress,\r\n    transaction: (\r\n      await sendTransactions(\r\n        candyMachine.program.provider.connection,\r\n        candyMachine.program.provider.wallet,\r\n        [instructions],\r\n        [signers],\r\n        SequenceType.StopOnFailure,\r\n        'singleGossip',\r\n        () => {},\r\n        () => false,\r\n        undefined,\r\n        [],\r\n        [],\r\n      )\r\n    ).txs[0].txid,\r\n  };\r\n};\r\n\r\ntype MintResult = {\r\n  mintTxId: string;\r\n  metadataKey: anchor.web3.PublicKey;\r\n};\r\n\r\nexport const mintOneToken = async (\r\n  candyMachine: CandyMachineAccount,\r\n  payer: anchor.web3.PublicKey,\r\n  beforeTransactions: Transaction[] = [],\r\n  afterTransactions: Transaction[] = [],\r\n  setupState?: SetupState,\r\n): Promise<MintResult | null> => {\r\n  const mint = setupState?.mint ?? anchor.web3.Keypair.generate();\r\n  const userTokenAccountAddress = (\r\n    await getAtaForMint(mint.publicKey, payer)\r\n  )[0];\r\n\r\n  const userPayingAccountAddress = candyMachine.state.tokenMint\r\n    ? (await getAtaForMint(candyMachine.state.tokenMint, payer))[0]\r\n    : payer;\r\n\r\n  const candyMachineAddress = candyMachine.id;\r\n  const remainingAccounts = [];\r\n  const instructions = [];\r\n  const signers: anchor.web3.Keypair[] = [];\r\n  console.log('SetupState: ', setupState);\r\n  if (!setupState) {\r\n    signers.push(mint);\r\n    instructions.push(\r\n      ...[\r\n        anchor.web3.SystemProgram.createAccount({\r\n          fromPubkey: payer,\r\n          newAccountPubkey: mint.publicKey,\r\n          space: MintLayout.span,\r\n          lamports:\r\n            await candyMachine.program.provider.connection.getMinimumBalanceForRentExemption(\r\n              MintLayout.span,\r\n            ),\r\n          programId: TOKEN_PROGRAM_ID,\r\n        }),\r\n        Token.createInitMintInstruction(\r\n          TOKEN_PROGRAM_ID,\r\n          mint.publicKey,\r\n          0,\r\n          payer,\r\n          payer,\r\n        ),\r\n        createAssociatedTokenAccountInstruction(\r\n          userTokenAccountAddress,\r\n          payer,\r\n          payer,\r\n          mint.publicKey,\r\n        ),\r\n        Token.createMintToInstruction(\r\n          TOKEN_PROGRAM_ID,\r\n          mint.publicKey,\r\n          userTokenAccountAddress,\r\n          payer,\r\n          [],\r\n          1,\r\n        ),\r\n      ],\r\n    );\r\n  }\r\n\r\n  if (candyMachine.state.gatekeeper) {\r\n    remainingAccounts.push({\r\n      pubkey: (\r\n        await getNetworkToken(\r\n          payer,\r\n          candyMachine.state.gatekeeper.gatekeeperNetwork,\r\n        )\r\n      )[0],\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n\r\n    if (candyMachine.state.gatekeeper.expireOnUse) {\r\n      remainingAccounts.push({\r\n        pubkey: CIVIC,\r\n        isWritable: false,\r\n        isSigner: false,\r\n      });\r\n      remainingAccounts.push({\r\n        pubkey: (\r\n          await getNetworkExpire(\r\n            candyMachine.state.gatekeeper.gatekeeperNetwork,\r\n          )\r\n        )[0],\r\n        isWritable: false,\r\n        isSigner: false,\r\n      });\r\n    }\r\n  }\r\n  if (candyMachine.state.whitelistMintSettings) {\r\n    const mint = new anchor.web3.PublicKey(\r\n      candyMachine.state.whitelistMintSettings.mint,\r\n    );\r\n\r\n    const whitelistToken = (await getAtaForMint(mint, payer))[0];\r\n    remainingAccounts.push({\r\n      pubkey: whitelistToken,\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n\r\n    if (candyMachine.state.whitelistMintSettings.mode.burnEveryTime) {\r\n      remainingAccounts.push({\r\n        pubkey: mint,\r\n        isWritable: true,\r\n        isSigner: false,\r\n      });\r\n      remainingAccounts.push({\r\n        pubkey: payer,\r\n        isWritable: false,\r\n        isSigner: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  if (candyMachine.state.tokenMint) {\r\n    remainingAccounts.push({\r\n      pubkey: userPayingAccountAddress,\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n    remainingAccounts.push({\r\n      pubkey: payer,\r\n      isWritable: false,\r\n      isSigner: true,\r\n    });\r\n  }\r\n  const metadataAddress = await getMetadata(mint.publicKey);\r\n  const masterEdition = await getMasterEdition(mint.publicKey);\r\n\r\n  const [candyMachineCreator, creatorBump] = await getCandyMachineCreator(\r\n    candyMachineAddress,\r\n  );\r\n\r\n  console.log(remainingAccounts.map(rm => rm.pubkey.toBase58()));\r\n  instructions.push(\r\n    await candyMachine.program.instruction.mintNft(creatorBump, {\r\n      accounts: {\r\n        candyMachine: candyMachineAddress,\r\n        candyMachineCreator,\r\n        payer: payer,\r\n        wallet: candyMachine.state.treasury,\r\n        mint: mint.publicKey,\r\n        metadata: metadataAddress,\r\n        masterEdition,\r\n        mintAuthority: payer,\r\n        updateAuthority: payer,\r\n        tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\r\n        tokenProgram: TOKEN_PROGRAM_ID,\r\n        systemProgram: SystemProgram.programId,\r\n        rent: anchor.web3.SYSVAR_RENT_PUBKEY,\r\n        clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\r\n        recentBlockhashes: SYSVAR_SLOT_HASHES_PUBKEY,\r\n        instructionSysvarAccount: anchor.web3.SYSVAR_INSTRUCTIONS_PUBKEY,\r\n      },\r\n      remainingAccounts:\r\n        remainingAccounts.length > 0 ? remainingAccounts : undefined,\r\n    }),\r\n  );\r\n\r\n  const [collectionPDA] = await getCollectionPDA(candyMachineAddress);\r\n  const collectionPDAAccount =\r\n    await candyMachine.program.provider.connection.getAccountInfo(\r\n      collectionPDA,\r\n    );\r\n\r\n  if (collectionPDAAccount && candyMachine.state.retainAuthority) {\r\n    try {\r\n      const collectionData =\r\n        (await candyMachine.program.account.collectionPda.fetch(\r\n          collectionPDA,\r\n        )) as CollectionData;\r\n      console.log(collectionData);\r\n      const collectionMint = collectionData.mint;\r\n      const collectionAuthorityRecord = await getCollectionAuthorityRecordPDA(\r\n        collectionMint,\r\n        collectionPDA,\r\n      );\r\n      console.log(collectionMint);\r\n      if (collectionMint) {\r\n        const collectionMetadata = await getMetadata(collectionMint);\r\n        const collectionMasterEdition = await getMasterEdition(collectionMint);\r\n        console.log('Collection PDA: ', collectionPDA.toBase58());\r\n        console.log('Authority: ', candyMachine.state.authority.toBase58());\r\n        instructions.push(\r\n          await candyMachine.program.instruction.setCollectionDuringMint({\r\n            accounts: {\r\n              candyMachine: candyMachineAddress,\r\n              metadata: metadataAddress,\r\n              payer: payer,\r\n              collectionPda: collectionPDA,\r\n              tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\r\n              instructions: anchor.web3.SYSVAR_INSTRUCTIONS_PUBKEY,\r\n              collectionMint,\r\n              collectionMetadata,\r\n              collectionMasterEdition,\r\n              authority: candyMachine.state.authority,\r\n              collectionAuthorityRecord,\r\n            },\r\n          }),\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  const instructionsMatrix = [instructions];\r\n  const signersMatrix = [signers];\r\n\r\n  try {\r\n    const txns = (\r\n      await sendTransactions(\r\n        candyMachine.program.provider.connection,\r\n        candyMachine.program.provider.wallet,\r\n        instructionsMatrix,\r\n        signersMatrix,\r\n        SequenceType.StopOnFailure,\r\n        'singleGossip',\r\n        () => {},\r\n        () => false,\r\n        undefined,\r\n        beforeTransactions,\r\n        afterTransactions,\r\n      )\r\n    ).txs.map(t => t.txid);\r\n    const mintTxn = txns[0];\r\n    return {\r\n      mintTxId: mintTxn,\r\n      metadataKey: metadataAddress,\r\n    };\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const shortenAddress = (address: string, chars = 4): string => {\r\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\r\n};\r\n\r\nconst sleep = (ms: number): Promise<void> => {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n};\r\n"],"sourceRoot":""}